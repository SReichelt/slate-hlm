%../../../../../logics/hlm%

[
  $~"Empty set" = $../../../Essentials/Sets/"Empty set",
  $~"Fresh variables" = $../../"Fresh variables",
  $~Terms = $../Terms
]

/**
 * @references * https://en.wikipedia.org/wiki/Lambda_calculus#Standard_terms
 *             * https://ncatlab.org/nlab/show/fixed-point+combinator
 */
$"fixed-point": %ExplicitOperator {
  notation = 'ùó¨',
  definition = [$~Terms(V = $~"Empty set").abstraction(_2 = {
      #(f: %Element($~"Fresh variables"(V = $~"Empty set"))),
      {M = $~Terms(V = %enumeration(f)).application(
          M = $~Terms(V = %enumeration(f)).abstraction(_2 = {
              #(x: %Element($~"Fresh variables"(V = %enumeration(f)))),
              {M = $~Terms(V = %enumeration(f, x)).application(
                  M = f,
                  N = $~Terms(V = %enumeration(f, x)).application(M = x, N = x)
              )}
          }),
          N = $~Terms(V = %enumeration(f)).abstraction(_2 = {
              #(x: %Element($~"Fresh variables"(V = %enumeration(f)))),
              {M = $~Terms(V = %enumeration(f, x)).application(
                  M = f,
                  N = $~Terms(V = %enumeration(f, x)).application(M = x, N = x)
              )}
          })
      )}
  })]
}

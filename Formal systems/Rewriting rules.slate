%../../../logics/hlm%

/**
 * @remarks This definition just provides some useful notation for rewriting rules for terms in `T`. It is actually equivalent to the Cartesian product of `T` with itself.
 */
$"Rewriting rules"(T: %Set(auto = %true, embedSubsets = %true)): %Construction {
  $rule(l,r: %Element(T)): %Constructor {
    notation = $FunctionOperator(operands = [l, r]),
    equalityDefinition = {
      leftParameters = #(l,r: %Element(T)),
      rightParameters = #("l'","r'": %Element(T)),
      definition = [%and(
        %equals(l, "l'"),
        %equals(r, "r'")
      )],
      isomorphic = %true
    }
  }

  notation = $Function(
    function = '𝓡𝓮𝔀𝓻',
    arguments = [T]
  )
}

%../../../../../logics/hlm%

/**
 * @references * https://en.wikipedia.org/wiki/Vector_space#Coordinate_spaces
 */
$"column vector space"(
  𝐅: %Element(
    $../../../Algebra/Fields/Fields,
    auto = %true
  ),
  n: %Element($../../../Essentials/Numbers/Natural/"Natural numbers")
): %ExplicitOperator {
  display = [$SubSup(
    body = 𝐅,
    sup = n
  )],
  definition = [
    $../../../Algebra/Rings/Modules/"Left modules"/"Left modules"(𝐑 = {𝐅}).module(
        M = {$../../../Algebra/Rings/Matrices/Vectors(
          𝐑 = {𝐅},
          n = {n}
        )},
        ⊕ = {$../../../Essentials/Functions/Operations/operator(
          X = {$../../../Algebra/Rings/Matrices/Vectors(
            𝐑 = {𝐅},
            n = {n}
          )},
          Y = {$../../../Algebra/Rings/Matrices/Vectors(
            𝐑 = {𝐅},
            n = {n}
          )},
          Z = {$../../../Algebra/Rings/Matrices/Vectors(
            𝐑 = {𝐅},
            n = {n}
          )},
          parameters = #(
            v: %Element($../../../Algebra/Rings/Matrices/Vectors(
              𝐑 = {𝐅},
              n = {n}
            )),
            w: %Element(%previous)
          ),
          operator = $../../../Algebra/Rings/Matrices/sum(
            𝐑 = {𝐅},
            m = {$../../../Essentials/Numbers/Natural/number(value = 1)},
            n = {n},
            A = {v},
            B = {w}
          )
        )},
        "0" = {$../../../Algebra/Rings/Matrices/zero(
          𝐑 = {𝐅},
          m = {$../../../Essentials/Numbers/Natural/number(value = 1)},
          n = {n}
        )},
        ⊖ = {$../../../Essentials/Functions/operator(
          X = {$../../../Algebra/Rings/Matrices/Vectors(
            𝐑 = {𝐅},
            n = {n}
          )},
          Y = {$../../../Algebra/Rings/Matrices/Vectors(
            𝐑 = {𝐅},
            n = {n}
          )},
          parameter = #(v: %Element($../../../Algebra/Rings/Matrices/Vectors(
            𝐑 = {𝐅},
            n = {n}
          ))),
          operator = $../../../Algebra/Rings/Matrices/"additive inverse"(
            𝐑 = {𝐅},
            m = {$../../../Essentials/Numbers/Natural/number(value = 1)},
            n = {n},
            A = {v}
          )
        )},
        ⊙ = {$../../../Essentials/Functions/Operations/operator(
          X = {$../../../Algebra/Rings/Carrier(𝐑 = {𝐅})},
          Y = {$../../../Algebra/Rings/Matrices/Vectors(
            𝐑 = {𝐅},
            n = {n}
          )},
          Z = {$../../../Algebra/Rings/Matrices/Vectors(
            𝐑 = {𝐅},
            n = {n}
          )},
          parameters = #(
            a: %Element($../../../Algebra/Rings/Carrier(𝐑 = {𝐅})),
            v: %Element($../../../Algebra/Rings/Matrices/Vectors(
              𝐑 = {𝐅},
              n = {n}
            ))
          ),
          operator = $../../../Algebra/Rings/Matrices/"product with left scalar"(
            𝐑 = {𝐅},
            m = {$../../../Essentials/Numbers/Natural/number(value = 1)},
            n = {n},
            r = {a},
            A = {v}
          )
        )}
    ),
    $../../../Algebra/Rings/Modules/"Left modules"/Examples/"matrix module"(
      𝐑 = {𝐅},
      m = {$../../../Essentials/Numbers/Natural/number(value = 1)},
      n = {n}
    )
  ]
}

%../../../../../logics/hlm%

[
  $~Carrier = $../../../Algebra/Rings/Carrier,
  $~Matrices = $../../../Algebra/Rings/Matrices,
  $~Operations = $../../../Essentials/Operations/Operations,
  $~Rings = $../../../Algebra/Rings,
  $~Vectors = $../../../Algebra/Rings/Matrices/Vectors,
  $~number = $../../../Essentials/Numbers/Natural/number
]

/**
 * @references * https://en.wikipedia.org/wiki/Vector_space#Coordinate_spaces
 */
$"column vector space"(
  𝐅: %Element(
    $../../../Algebra/Fields/Fields,
    auto = %true
  ),
  n: %Element($../../../Essentials/Numbers/Natural/"Natural numbers")
): %ExplicitOperator {
  notation = $SubSup(body = 𝐅, sup = n),
  definition = [
    $~Rings/Modules/"Left modules"/"Left modules"(𝐑 = 𝐅).module(
        M = $~Vectors(𝐑 = 𝐅, n = n),
        ⊕ = $~Operations(
            X = $~Vectors(𝐑 = 𝐅, n = n),
            Y = $~Vectors(𝐑 = 𝐅, n = n),
            Z = $~Vectors(𝐑 = 𝐅, n = n)
          ).operation(_1 = {
            #(v,w: %Element($~Vectors(𝐑 = 𝐅, n = n))),
            {z = $~Matrices/sum(
              𝐑 = 𝐅,
              m = $~number(value = 1),
              n = n, A = v, B = w
            )}
        }),
        "0" = $~Matrices/zero(
          𝐑 = 𝐅,
          m = $~number(value = 1),
          n = n
        ),
        ⊖ = $../../../Essentials/Functions/Functions(
            X = $~Vectors(𝐑 = 𝐅, n = n),
            Y = $~Vectors(𝐑 = 𝐅, n = n)
          ).function(_1 = {
            #(v: %Element($~Vectors(𝐑 = 𝐅, n = n))),
            {y = $~Matrices/"additive inverse"(
              𝐑 = 𝐅,
              m = $~number(value = 1),
              n = n, A = v
            )}
        }),
        ⊙ = $~Operations(
            X = $~Carrier(𝐑 = 𝐅),
            Y = $~Vectors(𝐑 = 𝐅, n = n),
            Z = $~Vectors(𝐑 = 𝐅, n = n)
          ).operation(_1 = {
            #(
              a: %Element($~Carrier(𝐑 = 𝐅)),
              v: %Element($~Vectors(𝐑 = 𝐅, n = n))
            ),
            {z = $~Matrices/"product with left scalar"(
              𝐑 = 𝐅,
              m = $~number(value = 1),
              n = n, r = a, A = v
            )}
        })
    ),
    $~Rings/Modules/"Left modules"/Examples/"matrix module"(
      𝐑 = 𝐅,
      m = $~number(value = 1),
      n = n
    )
  ]
}

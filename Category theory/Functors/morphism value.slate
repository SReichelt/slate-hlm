%../../../../logics/hlm%

$"morphism value"(
  u: %Element(
    $../../Essentials/Numbers/Natural/"Natural numbers",
    auto = %true
  ),
  v: %Element(
    %previous,
    auto = %true
  ),
  𝓒: %Element(
    $../Categories(u = {u}),
    auto = %true
  ),
  𝓓: %Element(
    $../Categories(u = {v}),
    auto = %true
  ),
  F: %Element($Functors(
    u = {u},
    v = {v},
    𝓒 = {𝓒},
    𝓓 = {𝓓}
  )),
  𝐗: %Element($../Objects(
    u = {u},
    𝓒 = {𝓒}
  )),
  𝐘: %Element(%previous),
  f: %Element($../Morphisms(
    u = {u},
    𝓒 = {𝓒},
    𝐗 = {𝐗},
    𝐘 = {𝐘}
  ))
): %ExplicitOperator {
  notation = [$Function(
    function = F,
    arguments = [f]
  )],
  definition = [%asElementOf(
    %structuralCases(
      F,
      $Functors(
        u = {u},
        v = {v},
        𝓒 = {𝓒},
        𝓓 = {𝓓}
      ),
      [{
        constructor = $Functors.functor,
        parameters = #(
          𝐀: %Binding(
            $../Objects(
              u = {u},
              𝓒 = {𝓒}
            ),
            #(𝐃: %Element($../Objects(
              u = {v},
              𝓒 = {𝓓}
            )))
          ),
          𝐁: %Binding(
            $../Objects(
              u = {u},
              𝓒 = {𝓒}
            ),
            #(𝐂: %Binding(
              %previous,
              #(g: %Binding(
                $../Morphisms(
                  u = {u},
                  𝓒 = {𝓒},
                  𝐗 = {𝐁},
                  𝐘 = {𝐂}
                ),
                #(h: %Element($../Morphisms(
                  u = {v},
                  𝓒 = {𝓓},
                  𝐗 = {𝐃[𝐁]},
                  𝐘 = {𝐃[𝐂]}
                )))
              ))
            ))
          ),
          _1: %Constraint(%forall(
            #(𝐀: %Element($../Objects(
              u = {u},
              𝓒 = {𝓒}
            ))),
            %equals(
              h[
                𝐀,
                𝐀,
                $../identity(
                  u = {u},
                  𝓒 = {𝓒},
                  𝐗 = {𝐀}
                )
              ],
              $../identity(
                u = {v},
                𝓒 = {𝓓},
                𝐗 = {𝐃[𝐀]}
              )
            )
          )),
          _2: %Constraint(%forall(
            #(
              𝐀: %Element($../Objects(
                u = {u},
                𝓒 = {𝓒}
              )),
              𝐁: %Element(%previous),
              𝐂: %Element(%previous),
              d: %Element($../Morphisms(
                u = {u},
                𝓒 = {𝓒},
                𝐗 = {𝐀},
                𝐘 = {𝐁}
              )),
              e: %Element($../Morphisms(
                u = {u},
                𝓒 = {𝓒},
                𝐗 = {𝐁},
                𝐘 = {𝐂}
              ))
            ),
            %equals(
              h[
                𝐀,
                𝐂,
                $../composition(
                  u = {u},
                  𝓒 = {𝓒},
                  𝐗 = {𝐀},
                  𝐘 = {𝐁},
                  𝐙 = {𝐂},
                  g = {e},
                  f = {d}
                )
              ],
              $../composition(
                u = {v},
                𝓒 = {𝓓},
                𝐗 = {𝐃[𝐀]},
                𝐘 = {𝐃[𝐁]},
                𝐙 = {𝐃[𝐂]},
                g = {h[𝐁,𝐂,e]},
                f = {h[𝐀,𝐁,d]}
              )
            )
          ))
        ),
        value = h[𝐗,𝐘,f]
      }]
    ),
    $../Morphisms(
      u = {v},
      𝓒 = {𝓓},
      𝐗 = {$"object value"(
        u = {u},
        v = {v},
        𝓒 = {𝓒},
        𝓓 = {𝓓},
        F = {F},
        𝐗 = {𝐗}
      )},
      𝐘 = {$"object value"(
        u = {u},
        v = {v},
        𝓒 = {𝓒},
        𝓓 = {𝓓},
        F = {F},
        𝐗 = {𝐘}
      )}
    )
  )]
}

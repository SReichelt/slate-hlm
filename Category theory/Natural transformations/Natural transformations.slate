%../../../../logics/hlm%

/**
 * @references * https://en.wikipedia.org/wiki/Natural_transformation
 *             * https://mathworld.wolfram.com/NaturalTransformation.html
 *             * https://proofwiki.org/wiki/Definition:Natural_Transformation
 *             * https://ncatlab.org/nlab/show/natural+transformation
 *             * https://leanprover-community.github.io/mathlib_docs/category_theory/natural_transformation.html#category_theory.nat_trans
 */
$"Natural transformations"(
  u,v: %Element(
    $../../Essentials/Numbers/Natural/"Natural numbers",
    auto = %true
  ),
  𝓒: %Element(
    $../Categories(u = u),
    auto = %true
  ),
  𝓓: %Element(
    $../Categories(u = v),
    auto = %true
  ),
  F,G: %Element($../Functors/Functors(
    u = u,
    v = v,
    𝓒 = 𝓒,
    𝓓 = 𝓓
  ))
): %SetOperator {
  notation = $Function(
    function = 'Nat',
    arguments = [F, G]
  ),
  definitionNotation = {
    parameter = #(η: %Expr),
    notation = $FunctionDeclaration(
      function = η,
      symbol = '⇒',
      operands = [F, G]
    ),
    singularName = 'natural transformation',
    pluralName = 'natural transformations',
    nameOptional = %true
  },
  definition = [%subset(
    #(η: %Element($"Infranatural transformations"(
      u = u,
      v = v,
      𝓒 = 𝓒,
      𝓓 = 𝓓,
      F = F,
      G = G
    ))),
    %forall(
      #(
        𝐗,𝐘: %Element($../Objects(
          u = u,
          𝓒 = 𝓒
        )),
        f: %Element($../Morphisms(
          u = u,
          𝓒 = 𝓒,
          𝐗 = 𝐗,
          𝐘 = 𝐘
        ))
      ),
      %equals(
        $../composition(
          u = v,
          𝓒 = 𝓓,
          𝐗 = $../Functors/"object value"(
            u = u,
            v = v,
            𝓒 = 𝓒,
            𝓓 = 𝓓,
            F = F,
            𝐗 = 𝐗
          ),
          𝐘 = $../Functors/"object value"(
            u = u,
            v = v,
            𝓒 = 𝓒,
            𝓓 = 𝓓,
            F = F,
            𝐗 = 𝐘
          ),
          𝐙 = $../Functors/"object value"(
            u = u,
            v = v,
            𝓒 = 𝓒,
            𝓓 = 𝓓,
            F = G,
            𝐗 = 𝐘
          ),
          f = $../Functors/"morphism value"(
            u = u,
            v = v,
            𝓒 = 𝓒,
            𝓓 = 𝓓,
            F = F,
            𝐗 = 𝐗,
            𝐘 = 𝐘,
            f = f
          ),
          g = $component(
            u = u,
            v = v,
            𝓒 = 𝓒,
            𝓓 = 𝓓,
            F = F,
            G = G,
            η = η,
            𝐗 = 𝐘
          )
        ),
        $../composition(
          u = v,
          𝓒 = 𝓓,
          𝐗 = $../Functors/"object value"(
            u = u,
            v = v,
            𝓒 = 𝓒,
            𝓓 = 𝓓,
            F = F,
            𝐗 = 𝐗
          ),
          𝐘 = $../Functors/"object value"(
            u = u,
            v = v,
            𝓒 = 𝓒,
            𝓓 = 𝓓,
            F = G,
            𝐗 = 𝐗
          ),
          𝐙 = $../Functors/"object value"(
            u = u,
            v = v,
            𝓒 = 𝓒,
            𝓓 = 𝓓,
            F = G,
            𝐗 = 𝐘
          ),
          f = $component(
            u = u,
            v = v,
            𝓒 = 𝓒,
            𝓓 = 𝓓,
            F = F,
            G = G,
            η = η,
            𝐗 = 𝐗
          ),
          g = $../Functors/"morphism value"(
            u = u,
            v = v,
            𝓒 = 𝓒,
            𝓓 = 𝓓,
            F = G,
            𝐗 = 𝐗,
            𝐘 = 𝐘,
            f = f
          )
        )
      )
    )
  )]
}

%../../../../logics/hlm%

$commutative(𝐑: %Element($Semirings)): %Predicate {
  notation = $Property(
    operand = 𝐑,
    property = 'commutative'
  ),
  definition = [%structural(
    𝐑,
    $Semirings,
    [{
      constructor = $Semirings.semiring,
      parameters = #(
        R: %Set,
        ⊕: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {R})),
        "0": %Element(R),
        ⊙: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {R})),
        "1": %Element(R),
        _1: %Constraint($semiring(
          R = {R},
          ⊕ = {⊕},
          "0" = {"0"},
          ⊙ = {⊙},
          "1" = {"1"}
        ))
      ),
      value = $../../Essentials/Functions/Operations/commutative(
        X = {R},
        Z = {R},
        ∗ = {⊙}
      )
    }]
  )]
}

%../../../../logics/hlm%

/**
 * @remarks This definition lets us multiply elements without decomposing the monoid.
 */
$operation(
  𝐌: %Element(
    $Monoids,
    auto = %true
  ),
  a,b: %Element($Carrier(𝐌 = 𝐌))
): %ExplicitOperator {
  notation = $MultiplicationLikeOperator(operands = [a, b]),
  definition = [%structuralCases(
    𝐌,
    $Monoids,
    [{
      constructor = $Monoids.monoid,
      parameters = #(
        M: %Set,
        ∗: %Element($../../Essentials/Operations/"Inner operations"(X = M)),
        e: %Element(M),
        _1: %Constraint($monoid(
          M = M,
          ∗ = ∗,
          e = e
        ))
      ),
      value = $../../Essentials/Operations/value(
        X = M,
        Y = M,
        Z = M,
        ∗ = ∗,
        x = a,
        y = b
      )
    }]
  )]
}

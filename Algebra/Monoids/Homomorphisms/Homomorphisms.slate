%../../../../../logics/hlm%

/**
 * @references * https://en.wikipedia.org/wiki/Monoid#Monoid_homomorphisms
 *             * https://proofwiki.org/wiki/Definition:Monoid_Homomorphism
 *             * https://ncatlab.org/nlab/show/homomorphism
 *             * https://leanprover-community.github.io/mathlib_docs/algebra/group/hom.html#monoid_hom
 */
$Homomorphisms(𝐌,𝐍: %Element($../Monoids)): %SetOperator {
  notation = $Function(
    function = 'Hom',
    arguments = [𝐌, 𝐍]
  ),
  definitionNotation = {
    parameter = #(φ: %Expr),
    notation = $FunctionDeclaration(
      function = φ,
      operands = [𝐌, 𝐍]
    ),
    singularName = 'homomorphism',
    pluralName = 'homomorphisms'
  },
  definition = [%subset(
    #(f: %Element($../../../Essentials/Functions/Functions(
      X = $../Carrier(𝐌 = 𝐌),
      Y = $../Carrier(𝐌 = 𝐍)
    ))),
    %and(
      %forall(
        #(a,b: %Element($../Carrier(𝐌 = 𝐌))),
        %equals(
          $../../../Essentials/Functions/value(
            X = $../Carrier(𝐌 = 𝐌),
            Y = $../Carrier(𝐌 = 𝐍),
            f = f,
            x = $../operation(
              𝐌 = 𝐌,
              a = a,
              b = b
            )
          ),
          $../operation(
            𝐌 = 𝐍,
            a = $../../../Essentials/Functions/value(
              X = $../Carrier(𝐌 = 𝐌),
              Y = $../Carrier(𝐌 = 𝐍),
              f = f,
              x = a
            ),
            b = $../../../Essentials/Functions/value(
              X = $../Carrier(𝐌 = 𝐌),
              Y = $../Carrier(𝐌 = 𝐍),
              f = f,
              x = b
            )
          )
        )
      ),
      %equals(
        $../../../Essentials/Functions/value(
          X = $../Carrier(𝐌 = 𝐌),
          Y = $../Carrier(𝐌 = 𝐍),
          f = f,
          x = $../identity(𝐌 = 𝐌)
        ),
        $../identity(𝐌 = 𝐍)
      )
    )
  )]
}

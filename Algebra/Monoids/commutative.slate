%../../../../logics/hlm%

/**
 * @references * https://leanprover-community.github.io/mathlib_docs/algebra/group/basic.html#comm_monoid
 */
$commutative(𝐌: %Element($Monoids)): %Predicate {
  notation = $Property(
    operand = 𝐌,
    property = 'commutative'
  ),
  definition = [%structural(
    𝐌,
    $Monoids,
    [{
      constructor = $Monoids.monoid,
      parameters = #(
        M: %Set,
        ∗: %Element($../../Essentials/Operations/"Inner operations"(X = M)),
        e: %Element(M),
        _1: %Constraint($monoid(
          M = M,
          ∗ = ∗,
          e = e
        ))
      ),
      value = $../../Essentials/Operations/commutative(
        X = M,
        Z = M,
        ∗ = ∗
      )
    }]
  )]
}

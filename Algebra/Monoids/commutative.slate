%../../../../logics/hlm%

/**
 * @references * https://leanprover-community.github.io/mathlib_docs/core/init/algebra/group.html#comm_monoid
 */
$commutative(𝐌: %Element($Monoids)): %Predicate {
  display = [$Property(
    operand = 𝐌,
    property = 'commutative'
  )],
  definition = [%structural(
    𝐌,
    $Monoids,
    [{
      constructor = $Monoids.monoid,
      parameters = #(
        M: %Set,
        ∗: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {M})),
        e: %Element(M),
        _1: %Constraint($monoid(
          M = {M},
          ∗ = {∗},
          e = {e}
        ))
      ),
      value = $../../Essentials/Functions/Operations/commutative(
        X = {M},
        Z = {M},
        ∗ = {∗}
      )
    }]
  )]
}

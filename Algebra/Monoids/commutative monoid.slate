%../../../../logics/hlm%

[
  $~Operations = $../../Essentials/Operations
]

$"commutative monoid"(
  M: %Set,
  ∗: %Element($~Operations/"Inner operations"(X = M)),
  e: %Element(M)
): %Predicate {
  notation = $Structure(
    items = [M, ∗, e],
    singular = 'commutative monoid',
    plural = 'commutative monoids'
  ),
  definition = [
    %and(
      $monoid(M = M, ∗ = ∗, e = e),
      $commutative(𝐌 = $Monoids.monoid(M = M, ∗ = ∗, e = e))
    ),
    %and(
      $~Operations/associative(X = M, ∗ = ∗),
      $~Operations/commutative(X = M, Z = M, ∗ = ∗),
      $~Operations/"identity element"(X = M, ∗ = ∗, e = e)
    )
  ]
}

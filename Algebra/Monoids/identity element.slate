%../../../../logics/hlm%

$"identity element"(𝐌: %Element($Monoids)): %ExplicitOperator {
  display = [$SubSup(
    body = '1',
    sub = 𝐌
  )],
  definition = [%structuralCases(
    𝐌,
    $Monoids,
    [{
      constructor = $Monoids.monoid,
      parameters = #(
        M: %Set,
        ∗: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {M})),
        _1: %Constraint($../../Essentials/Functions/Operations/associative(
          X = {M},
          ∗ = {∗}
        )),
        e: %Element(M),
        _2: %Constraint(%forall(
          #(a: %Element(M)),
          %and(
            %equals(
              $../../Essentials/Functions/Operations/value(
                X = {M},
                Y = {M},
                Z = {M},
                ∗ = {∗},
                x = {a},
                y = {e}
              ),
              a
            ),
            %equals(
              $../../Essentials/Functions/Operations/value(
                X = {M},
                Y = {M},
                Z = {M},
                ∗ = {∗},
                x = {e},
                y = {a}
              ),
              a
            )
          )
        ))
      ),
      value = e
    }]
  )]
}

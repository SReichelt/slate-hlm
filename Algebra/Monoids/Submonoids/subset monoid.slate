%../../../../../logics/hlm%

/**
 * @references * https://leanprover-community.github.io/mathlib_docs/group_theory/submonoid.html#subtype.monoid
 */
$"subset monoid"(
  𝐌: %Element($../Monoids),
  S: %Subset($../Carrier(𝐌 = {𝐌})),
  _1: %Constraint($"submonoid set"(
    𝐌 = {𝐌},
    S = {S}
  ))
): %ExplicitOperator {
  display = [$SubSup(
    body = $Parens(
      body = S,
      style = '[]'
    ),
    sub = 𝐌
  )],
  definition = [%structuralCases(
    𝐌,
    $../Monoids,
    [{
      constructor = $../Monoids.monoid,
      parameters = #(
        M: %Set,
        ∗: %Element($../../../Essentials/Functions/Operations/"Inner operations"(X = {M})),
        _1: %Constraint($../../../Essentials/Functions/Operations/associative(
          X = {M},
          ∗ = {∗}
        )),
        e: %Element(M),
        _2: %Constraint(%forall(
          #(a: %Element(M)),
          %equals(
            $../../../Essentials/Functions/Operations/value(
              X = {M},
              Y = {M},
              Z = {M},
              ∗ = {∗},
              x = {a},
              y = {e}
            ),
            $../../../Essentials/Functions/Operations/value(
              X = {M},
              Y = {M},
              Z = {M},
              ∗ = {∗},
              x = {e},
              y = {a}
            ),
            a
          )
        ))
      ),
      value = $../Monoids.monoid(
        M = {S},
        ∗ = {$../../../Essentials/Functions/Operations/"inner operation restriction"(
          X = {M},
          A = {S},
          ∗ = {∗}
        )},
        e = {e}
      )
    }]
  )]
}

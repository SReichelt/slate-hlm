%../../../../../logics/hlm%

[
  $~Complex = $../../../Essentials/Numbers/Complex,
  $~"Complex numbers" = $../../../Essentials/Numbers/Complex/"Complex numbers",
  $~Operations = $../../../Essentials/Operations/Operations,
  $~number = $../../../Essentials/Numbers/Natural/number
]

/**
 * @references * https://leanprover-community.github.io/mathlib_docs/data/complex/basic.html#complex.field
 */
$"complex numbers": %ExplicitOperator {
  notation = 'ℂ',
  definition = [$../../Rings/Rings.ring(
    R = $~"Complex numbers",
    ⊕ = $~Operations(X = $~"Complex numbers", Y = $~"Complex numbers", Z = $~"Complex numbers").operation(_1 = {
        #(a,b: %Element($~"Complex numbers")),
        {z = $~Complex/sum(a = a, b = b)}
    }),
    "0" = $~number(value = 0),
    ⊖ = $../../../Essentials/Functions/Functions(X = $~"Complex numbers", Y = $~"Complex numbers").function(_1 = {
        #(a: %Element($~"Complex numbers")),
        {y = $~Complex/inverse(a = a)}
    }),
    ⊙ = $~Operations(X = $~"Complex numbers", Y = $~"Complex numbers", Z = $~"Complex numbers").operation(_1 = {
        #(a,b: %Element($~"Complex numbers")),
        {z = $~Complex/product(a = a, b = b)}
    }),
    "1" = $~number(value = 1)
  )]
}

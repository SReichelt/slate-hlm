%../../../../../logics/hlm%

/**
 * @references * https://leanprover-community.github.io/mathlib_docs/data/real/basic.html#real.field
 */
$"real numbers": %ExplicitOperator {
  notation = 'ℝ',
  definition = [$../../Rings/Rings.ring(
    R = {$../../../Essentials/Numbers/Real/"Real numbers"},
    ⊕ = {$../../../Essentials/Operations/Operations(
        X = {$../../../Essentials/Numbers/Real/"Real numbers"},
        Y = {$../../../Essentials/Numbers/Real/"Real numbers"},
        Z = {$../../../Essentials/Numbers/Real/"Real numbers"}
      ).operation(x = {
        #(a: %Element($../../../Essentials/Numbers/Real/"Real numbers")),
        {y = {
          #(b: %Element($../../../Essentials/Numbers/Real/"Real numbers")),
          {z = {$../../../Essentials/Numbers/Real/sum(
            a = {a},
            b = {b}
          )}}
        }}
    })},
    "0" = {$../../../Essentials/Numbers/Natural/number(value = 0)},
    ⊖ = {$../../../Essentials/Functions/Functions(
        X = {$../../../Essentials/Numbers/Real/"Real numbers"},
        Y = {$../../../Essentials/Numbers/Real/"Real numbers"}
      ).function(x = {
        #(a: %Element($../../../Essentials/Numbers/Real/"Real numbers")),
        {y = {$../../../Essentials/Numbers/Real/inverse(a = {a})}}
    })},
    ⊙ = {$../../../Essentials/Operations/Operations(
        X = {$../../../Essentials/Numbers/Real/"Real numbers"},
        Y = {$../../../Essentials/Numbers/Real/"Real numbers"},
        Z = {$../../../Essentials/Numbers/Real/"Real numbers"}
      ).operation(x = {
        #(a: %Element($../../../Essentials/Numbers/Real/"Real numbers")),
        {y = {
          #(b: %Element($../../../Essentials/Numbers/Real/"Real numbers")),
          {z = {$../../../Essentials/Numbers/Real/product(
            a = {a},
            b = {b}
          )}}
        }}
    })},
    "1" = {$../../../Essentials/Numbers/Natural/number(value = 1)}
  )]
}

%../../../../logics/hlm%

/**
 * @remarks Strictly speaking, the elements of this set are not pointed sets but isomorphism classes of pointed sets, which are similar to cardinal numbers (see `$../../Essentials/Numbers/Cardinal/"Cardinal numbers"`). Due to the rules of HLM, it is not even possible to define pointed sets (or other structures) in a way that would distinguish two isomorphic structures. In particular, the requirement to specify an equality definition, together with the way two arbitrary sets are treated as separate types, make sure that in the most general case, equality is in fact the same as isomorphism. (It is possible to identify more structures, but not fewer.)
 *
 * @references * https://en.wikipedia.org/wiki/Pointed_set
 *             * https://proofwiki.org/wiki/Definition:Pointed_Set
 *             * https://ncatlab.org/nlab/show/pointed+set
 */
$"Pointed sets": %Construction {
  $"pointed set"(
    S: %Set,
    s: %Element(S)
  ): %Constructor {
    notation = $Tuple(
      items = [S, s],
      style = '[]'
    ),
    equalityDefinition = {
      leftParameters = #(
        S: %Set,
        s: %Element(S)
      ),
      rightParameters = #(
        T: %Set,
        t: %Element(T)
      ),
      definition = [%exists(
        #(φ: %Element($../../Essentials/Functions/Bijections(
          X = {S},
          Y = {T}
        ))),
        formula = %equals(
          $../Generic/Isomorphisms/"element transport"(
            X = {S},
            Y = {T},
            φ = {φ},
            x = {s}
          ),
          t
        )
      )],
      isomorphic = %true
    }
  }

  notation = '𝓟𝓽𝓢𝓮𝓽',
  definitionNotation = {
    parameter = #(𝐒: %Expr),
    singularName = 'pointed set',
    pluralName = 'pointed sets'
  }
}

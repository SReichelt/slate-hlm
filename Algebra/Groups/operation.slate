%../../../../logics/hlm%

/**
 * @remarks This definition lets us multiply elements without decomposing the group.
 */
$operation(
  ùêÜ: %Element(
    $Groups,
    auto = %true
  ),
  a: %Element($Carrier(ùêÜ = {ùêÜ})),
  b: %Element(%previous)
): %ExplicitOperator {
  display = [$Operator(
    symbol = '‚Ä¢',
    operands = [a, b]
  )],
  definition = [%structuralCases(
    ùêÜ,
    $Groups,
    [{
      constructor = $Groups.group,
      parameters = #(
        G: %Set,
        ‚àó: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {G})),
        _1: %Constraint($../../Essentials/Functions/Operations/associative(
          X = {G},
          ‚àó = {‚àó}
        )),
        e: %Element(G),
        _2: %Constraint(%forall(
          #(a: %Element(G)),
          %and(
            %equals(
              $../../Essentials/Functions/Operations/value(
                X = {G},
                Y = {G},
                Z = {G},
                ‚àó = {‚àó},
                x = {a},
                y = {e}
              ),
              a
            ),
            %equals(
              $../../Essentials/Functions/Operations/value(
                X = {G},
                Y = {G},
                Z = {G},
                ‚àó = {‚àó},
                x = {e},
                y = {a}
              ),
              a
            )
          )
        )),
        i: %Element($../../Essentials/Functions/Functions(
          X = {G},
          Y = {G}
        )),
        _3: %Constraint(%forall(
          #(a: %Element(G)),
          %and(
            %equals(
              $../../Essentials/Functions/Operations/value(
                X = {G},
                Y = {G},
                Z = {G},
                ‚àó = {‚àó},
                x = {a},
                y = {$../../Essentials/Functions/value(
                  X = {G},
                  Y = {G},
                  f = {i},
                  x = {a}
                )}
              ),
              e
            ),
            %equals(
              $../../Essentials/Functions/Operations/value(
                X = {G},
                Y = {G},
                Z = {G},
                ‚àó = {‚àó},
                x = {$../../Essentials/Functions/value(
                  X = {G},
                  Y = {G},
                  f = {i},
                  x = {a}
                )},
                y = {a}
              ),
              e
            )
          )
        ))
      ),
      value = $../../Essentials/Functions/Operations/value(
        X = {G},
        Y = {G},
        Z = {G},
        ‚àó = {‚àó},
        x = {a},
        y = {b}
      )
    }]
  )]
}

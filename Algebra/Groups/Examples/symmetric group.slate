%../../../../../logics/hlm%

$"symmetric group"(X: %Set): %ExplicitOperator {
  display = [$SubSup(
    body = 'ùëÜ',
    sub = X
  )],
  definition = [$../Groups.group(
      G = {$../../../Essentials/Functions/Bijections(
        X = {X},
        Y = {X}
      )},
      ‚àó = {$../../../Essentials/Functions/Operations/operator(
        X = {$../../../Essentials/Functions/Bijections(
          X = {X},
          Y = {X}
        )},
        Y = {$../../../Essentials/Functions/Bijections(
          X = {X},
          Y = {X}
        )},
        Z = {$../../../Essentials/Functions/Bijections(
          X = {X},
          Y = {X}
        )},
        parameters = #(
          g: %Element($../../../Essentials/Functions/Bijections(
            X = {X},
            Y = {X}
          )),
          f: %Element(%previous)
        ),
        operator = $../../../Essentials/Functions/composition(
          X = {X},
          Y = {X},
          Z = {X},
          f = {f},
          g = {g}
        )
      )},
      e = {$../../../Essentials/Functions/identity(X = {X})},
      i = {$../../../Essentials/Functions/Functions(
          X = {$../../../Essentials/Functions/Bijections(
            X = {X},
            Y = {X}
          )},
          Y = {$../../../Essentials/Functions/Bijections(
            X = {X},
            Y = {X}
          )}
        ).function(x = {
          #(f: %Element($../../../Essentials/Functions/Bijections(
            X = {X},
            Y = {X}
          ))),
          {y = {$../../../Essentials/Functions/inverse(
            X = {X},
            Y = {X},
            f = {f}
          )}}
      })}
  )]
}

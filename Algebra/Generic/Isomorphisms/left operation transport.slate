%../../../../../logics/hlm%

$"left operation transport"(
  S: %Set(auto = %true),
  X: %Set(auto = %true),
  Y: %Set(auto = %true),
  φ: %Element($../../../Essentials/Functions/Bijections(
    X = {X},
    Y = {Y}
  )),
  ∗: %Element($../../../Essentials/Operations/Operations(
    X = {S},
    Y = {X},
    Z = {X}
  ))
): %ExplicitOperator {
  notation = $Function(
    function = φ,
    arguments = [∗],
    style = '[]'
  ),
  definition = [
    %structuralCases(
      ∗,
      $../../../Essentials/Operations/Operations(
        X = {S},
        Y = {X},
        Z = {X}
      ),
      [{
        constructor = $../../../Essentials/Operations/Operations.operation,
        parameters = #(s: %Binding(
          S,
          #(x: %Binding(
            X,
            #(z: %Element(X))
          ))
        )),
        value = $../../../Essentials/Operations/Operations(
            X = {S},
            Y = {Y},
            Z = {Y}
          ).operation(x = {
            parameter = #(s: %Element(S)),
            arguments = {y = {
              parameter = #(y: %Element(Y)),
              arguments = {z = {$../../../Essentials/Functions/value(
                X = {X},
                Y = {Y},
                f = {φ},
                x = {z[
                  s,
                  $../../../Essentials/Functions/value(
                    X = {Y},
                    Y = {X},
                    f = {$../../../Essentials/Functions/inverse(
                      X = {X},
                      Y = {Y},
                      f = {φ}
                    )},
                    x = {y}
                  )
                ]}
              )}}
            }}
        })
      }]
    ),
    $../../../Essentials/Functions/composition(
      X = {$../../../Essentials/Sets/"Cartesian product"(
        S = {S},
        T = {Y}
      )},
      Y = {X},
      Z = {Y},
      g = {φ},
      f = {%associative($../../../Essentials/Functions/composition(
        X = {$../../../Essentials/Sets/"Cartesian product"(
          S = {S},
          T = {Y}
        )},
        Y = {$../../../Essentials/Sets/"Cartesian product"(
          S = {S},
          T = {X}
        )},
        Z = {X},
        g = {∗},
        f = {$../../../Essentials/Functions/inverse(
          X = {$../../../Essentials/Sets/"Cartesian product"(
            S = {S},
            T = {X}
          )},
          Y = {$../../../Essentials/Sets/"Cartesian product"(
            S = {S},
            T = {Y}
          )},
          f = {$../../../Essentials/Functions/"cartesian product"(
            V = {S},
            W = {S},
            X = {X},
            Y = {Y},
            f = {$../../../Essentials/Functions/identity(X = {S})},
            g = {φ}
          )}
        )}
      ))}
    )
  ]
}

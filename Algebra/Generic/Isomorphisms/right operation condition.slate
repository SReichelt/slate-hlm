%../../../../../logics/hlm%

[
  $~"Cartesian product" = $../../../Essentials/Sets/"Cartesian product",
  $~Functions = $../../../Essentials/Functions,
  $~Operations = $../../../Essentials/Operations/Operations,
  $~composition = $../../../Essentials/Functions/composition
]

$"right operation condition"(
  S,X,Y: %Set(auto = %true),
  φ: %Element($~Functions/Bijections(X = X, Y = Y)),
  ∗: %Element($~Operations(X = X, Y = S, Z = X)),
  ⋆: %Element($~Operations(X = Y, Y = S, Z = Y))
): %Predicate {
  notation = $SpecificIsomorphismRelation(
    operands = [∗, ⋆],
    function = φ
  ),
  definition = [
    %structural(
      ⋆,
      $~Operations(X = Y, Y = S, Z = Y),
      [{
        constructor = $~Operations.operation,
        parameters = #(_2: %Binder(
          #(
            y: %Element(Y),
            s: %Element(S)
          ),
          #(b: %Element(Y))
        )),
        value = %structural(
          ∗,
          $~Operations(X = X, Y = S, Z = X),
          [{
            constructor = $~Operations.operation,
            parameters = #(_1: %Binder(
              #(
                x: %Element(X),
                s: %Element(S)
              ),
              #(a: %Element(X))
            )),
            value = %forall(
              #(
                x: %Element(X),
                s: %Element(S)
              ),
              %equals(
                $~Functions/value(
                  X = X, Y = Y, f = φ,
                  x = a[x = x, s = s]
                ),
                b[
                  y = $~Functions/value(X = X, Y = Y, f = φ, x = x),
                  s = s
                ]
              )
            )
          }]
        )
      }]
    ),
    %forall(
      #(
        x: %Element(X),
        s: %Element(S)
      ),
      %equals(
        $~Functions/value(
          X = X, Y = Y, f = φ,
          x = $../../../Essentials/Operations/value(X = X, Y = S, Z = X, ∗ = ∗, x = x, y = s)
        ),
        $../../../Essentials/Operations/value(
          X = Y, Y = S, Z = Y, ∗ = ⋆,
          x = $~Functions/value(X = X, Y = Y, f = φ, x = x),
          y = s
        )
      )
    ),
    %equals(
      $~composition(
        X = $~"Cartesian product"(S = X, T = S),
        Y = X, Z = Y, g = φ, f = ∗
      ),
      $~composition(
        X = $~"Cartesian product"(S = X, T = S),
        Y = $~"Cartesian product"(S = Y, T = S),
        Z = Y, g = ⋆,
        f = $~Functions/"cartesian product"(
          V = X, W = Y, X = S, Y = S, f = φ,
          g = $~Functions/identity(X = S)
        )
      )
    )
  ]
}

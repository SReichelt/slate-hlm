%../../../../../logics/hlm%

[
  $~Endorelations = $../../../Essentials/Relations/Endorelations,
  $~related = $../../../Essentials/Relations/related,
  $~value = $../../../Essentials/Functions/value
]

$"relation condition"(
  X,Y: %Set(auto = %true),
  φ: %Element($../../../Essentials/Functions/Bijections(X = X, Y = Y)),
  ≺: %Element($~Endorelations(S = X)),
  ⊂: %Element($~Endorelations(S = Y))
): %Predicate {
  notation = $SpecificIsomorphismRelation(
    operands = [≺, ⊂],
    function = φ
  ),
  definition = [
    %structural(
      ≺,
      $~Endorelations(S = X),
      [{
        constructor = $~Endorelations.relation,
        parameters = #(_2: %Binder(
          #(x_1,x_2: %Element(X)),
          #(p: %Prop)
        )),
        value = %structural(
          ⊂,
          $~Endorelations(S = Y),
          [{
            constructor = $~Endorelations.relation,
            parameters = #(_1: %Binder(
              #(y_1,y_2: %Element(Y)),
              #(q: %Prop)
            )),
            value = %forall(
              #(x_1,x_2: %Element(X)),
              %equiv(
                p[x_1 = x_1, x_2 = x_2],
                q[
                  y_1 = $~value(X = X, Y = Y, f = φ, x = x_1),
                  y_2 = $~value(X = X, Y = Y, f = φ, x = x_2)
                ]
              )
            )
          }]
        )
      }]
    ),
    %forall(
      #(x_1,x_2: %Element(X)),
      %equiv(
        $~related(S = X, T = X, ≺ = ≺, s = x_1, t = x_2),
        $~related(
          S = Y, T = Y, ≺ = ⊂,
          s = $~value(X = X, Y = Y, f = φ, x = x_1),
          t = $~value(X = X, Y = Y, f = φ, x = x_2)
        )
      )
    )
  ]
}

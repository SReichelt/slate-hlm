%../../../../logics/hlm%

/**
 * @remarks This definition lets us multiply elements without decomposing the ring.
 */
$product(
  𝐑: %Element(
    $Rings,
    auto = %true
  ),
  a: %Element($Carrier(𝐑 = {𝐑})),
  b: %Element(%previous)
): %ExplicitOperator {
  notation = [$Operator(
    symbol = '⋅',
    operands = [a, b],
    space = ' ',
    minParenLevel = 2,
    maxParenLevel = 2
  )],
  definition = [%structuralCases(
    𝐑,
    $Rings,
    [{
      constructor = $Rings.ring,
      parameters = #(
        R: %Set,
        ⊕: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {R})),
        "0": %Element(R),
        ⊖: %Element($../../Essentials/Functions/Functions(
          X = {R},
          Y = {R}
        )),
        ⊙: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {R})),
        "1": %Element(R),
        _1: %Constraint($ring(
          R = {R},
          ⊕ = {⊕},
          "0" = {"0"},
          ⊖ = {⊖},
          ⊙ = {⊙},
          "1" = {"1"}
        ))
      ),
      value = $../../Essentials/Functions/Operations/value(
        X = {R},
        Y = {R},
        Z = {R},
        ∗ = {⊙},
        x = {a},
        y = {b}
      )
    }]
  )]
}

%../../../../../logics/hlm%

/**
 * @references * https://en.wikipedia.org/wiki/Ring_(mathematics)#Basic_examples
 *             * https://ncatlab.org/nlab/show/ring#Examples
 *             * https://leanprover-community.github.io/mathlib_docs/core/init/data/int/basic.html#int.comm_ring
 */
$integers: %ExplicitOperator {
  notation = 'ℤ',
  definition = [$../Rings.ring(
    R = $../../../Essentials/Numbers/Integer/Integers,
    ⊕ = $../../../Essentials/Operations/Operations(
        X = $../../../Essentials/Numbers/Integer/Integers,
        Y = $../../../Essentials/Numbers/Integer/Integers,
        Z = $../../../Essentials/Numbers/Integer/Integers
      ).operation(_1 = {
        #(a,b: %Element($../../../Essentials/Numbers/Integer/Integers)),
        {z = $../../../Essentials/Numbers/Integer/sum(
          a = a,
          b = b
        )}
    }),
    "0" = $../../../Essentials/Numbers/Natural/number(value = 0),
    ⊖ = $../../../Essentials/Functions/Functions(
        X = $../../../Essentials/Numbers/Integer/Integers,
        Y = $../../../Essentials/Numbers/Integer/Integers
      ).function(_1 = {
        #(a: %Element($../../../Essentials/Numbers/Integer/Integers)),
        {y = $../../../Essentials/Numbers/Integer/inverse(a = a)}
    }),
    ⊙ = $../../../Essentials/Operations/Operations(
        X = $../../../Essentials/Numbers/Integer/Integers,
        Y = $../../../Essentials/Numbers/Integer/Integers,
        Z = $../../../Essentials/Numbers/Integer/Integers
      ).operation(_1 = {
        #(a,b: %Element($../../../Essentials/Numbers/Integer/Integers)),
        {z = $../../../Essentials/Numbers/Integer/product(
          a = a,
          b = b
        )}
    }),
    "1" = $../../../Essentials/Numbers/Natural/number(value = 1)
  )]
}

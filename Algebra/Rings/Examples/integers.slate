%../../../../../logics/hlm%

[
  $~Integer = $../../../Essentials/Numbers/Integer,
  $~Integers = $../../../Essentials/Numbers/Integer/Integers,
  $~Operations = $../../../Essentials/Operations/Operations,
  $~number = $../../../Essentials/Numbers/Natural/number
]

/**
 * @references * https://en.wikipedia.org/wiki/Ring_(mathematics)#Basic_examples
 *             * https://ncatlab.org/nlab/show/ring#Examples
 *             * https://leanprover-community.github.io/mathlib_docs/core/init/data/int/basic.html#int.comm_ring
 */
$integers: %ExplicitOperator {
  notation = 'ℤ',
  definition = [$../Rings.ring(
    R = $~Integers,
    ⊕ = $~Operations(X = $~Integers, Y = $~Integers, Z = $~Integers).operation(_1 = {
        #(a,b: %Element($~Integers)),
        {z = $~Integer/sum(a = a, b = b)}
    }),
    "0" = $~number(value = 0),
    ⊖ = $../../../Essentials/Functions/Functions(X = $~Integers, Y = $~Integers).function(_1 = {
        #(a: %Element($~Integers)),
        {y = $~Integer/inverse(a = a)}
    }),
    ⊙ = $~Operations(X = $~Integers, Y = $~Integers, Z = $~Integers).operation(_1 = {
        #(a,b: %Element($~Integers)),
        {z = $~Integer/product(a = a, b = b)}
    }),
    "1" = $~number(value = 1)
  )]
}

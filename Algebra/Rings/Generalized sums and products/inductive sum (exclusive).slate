%../../../../../logics/hlm%

$"inductive sum (exclusive)"(
  𝐑: %Element(
    $../Rings,
    auto = %true
  ),
  n: %Element($../../../Essentials/Numbers/Natural/"Natural numbers"),
  i: %Binding(
    $../../../Essentials/Numbers/Natural/Subsets/"Segment (less)"(n = {n}),
    #(a: %Element($../Carrier(𝐑 = {𝐑})))
  )
): %ExplicitOperator {
  display = [$LargeOperator(
    symbol = '∑',
    operand = a,
    under = $Relation(
      symbol = '<',
      operands = [i, n]
    ),
    minParenLevel = 1,
    maxParenLevel = 1
  )],
  definition = [%structuralCases(
    n,
    $../../../Essentials/Numbers/Natural/"Natural numbers",
    [
      {
        constructor = $../../../Essentials/Numbers/Natural/"Natural numbers".zero,
        value = $../zero(𝐑 = {𝐑}),
        rewrite = %true
      },
      {
        constructor = $../../../Essentials/Numbers/Natural/"Natural numbers".successor,
        parameters = #(m: %Element($../../../Essentials/Numbers/Natural/"Natural numbers")),
        value = $../sum(
          𝐑 = {𝐑},
          a = {$"inductive sum (exclusive)"(
            𝐑 = {𝐑},
            n = {m},
            i = {
              #(j: %Element($../../../Essentials/Numbers/Natural/Subsets/"Segment (less)"(n = {m}))),
              {a = {a[j]}}
            }
          )},
          b = {a[m]}
        ),
        rewrite = %true
      }
    ]
  )]
}

%../../../../../logics/hlm%

[
  $~Carrier = $../Carrier,
  $~"Natural numbers" = $../../../Essentials/Numbers/Natural/"Natural numbers",
  $~"Segment (less)" = $../../../Essentials/Numbers/Natural/Subsets/"Segment (less)"
]

/**
 * @references * https://en.wikipedia.org/wiki/Matrix_multiplication
 *             * https://mathworld.wolfram.com/MatrixMultiplication.html
 *             * https://proofwiki.org/wiki/Definition:Matrix_Product_(Conventional)
 *             * https://ncatlab.org/nlab/show/matrix+calculus
 *             * https://leanprover-community.github.io/mathlib_docs/data/matrix/basic.html#matrix.mul
 */
$product(
  𝐑: %Element(
    $../Rings,
    auto = %true
  ),
  l,m,n: %Element($~"Natural numbers", auto = %true),
  A: %Element($Matrices(𝐑 = 𝐑, m = l, n = m)),
  B: %Element($Matrices(𝐑 = 𝐑, m = m, n = n))
): %ExplicitOperator {
  notation = $MultiplicationOperator(operands = [A, B]),
  definition = [%structuralCases(
    B,
    $Matrices(𝐑 = 𝐑, m = m, n = n),
    [{
      constructor = $Matrices.matrix,
      parameters = #(_2: %Binder(
        #(
          j: %Element($~"Segment (less)"(n = m)),
          k: %Element($~"Segment (less)"(n = n))
        ),
        #(b: %Element($~Carrier(𝐑 = 𝐑)))
      )),
      value = %structuralCases(
        A,
        $Matrices(𝐑 = 𝐑, m = l, n = m),
        [{
          constructor = $Matrices.matrix,
          parameters = #(_1: %Binder(
            #(
              i: %Element($~"Segment (less)"(n = l)),
              j: %Element($~"Segment (less)"(n = m))
            ),
            #(a: %Element($~Carrier(𝐑 = 𝐑)))
          )),
          value = $Matrices(𝐑 = 𝐑, m = l, n = n).matrix(_1 = {
              #(
                i: %Element($~"Segment (less)"(n = l)),
                k: %Element($~"Segment (less)"(n = n))
              ),
              {a = $../../../Essentials/Operations/"Iterated operations"/"indexed by natural number"(
                X = $~Carrier(𝐑 = 𝐑),
                ⨂ = $../"Iterated operations"/"iterated sum"(𝐑 = 𝐑),
                n = m,
                _1 = {
                  #(j: %Element($~"Segment (less)"(n = m))),
                  {a = $../product(
                    𝐑 = 𝐑,
                    a = a[i = i, j = j],
                    b = b[j = j, k = k]
                  )}
                }
              )}
          })
        }]
      )
    }]
  )]
}

%../../../../../logics/hlm%

$sum(
  𝐑: %Element(
    $../Rings,
    auto = %true
  ),
  m,n: %Element(
    $../../../Essentials/Numbers/Natural/"Natural numbers",
    auto = %true
  ),
  A,B: %Element($Matrices(
    𝐑 = 𝐑,
    m = m,
    n = n
  ))
): %ExplicitOperator {
  notation = $AdditionOperator(operands = [A, B]),
  definition = [%structuralCases(
    B,
    $Matrices(
      𝐑 = 𝐑,
      m = m,
      n = n
    ),
    [{
      constructor = $Matrices.matrix,
      parameters = #(_2: %Binder(
        #(
          i: %Element($../../../Essentials/Numbers/Natural/Subsets/"Segment (less)"(n = m)),
          j: %Element($../../../Essentials/Numbers/Natural/Subsets/"Segment (less)"(n = n))
        ),
        #(b: %Element($../Carrier(𝐑 = 𝐑)))
      )),
      value = %structuralCases(
        A,
        $Matrices(
          𝐑 = 𝐑,
          m = m,
          n = n
        ),
        [{
          constructor = $Matrices.matrix,
          parameters = #(_1: %Binder(
            #(
              i: %Element($../../../Essentials/Numbers/Natural/Subsets/"Segment (less)"(n = m)),
              j: %Element($../../../Essentials/Numbers/Natural/Subsets/"Segment (less)"(n = n))
            ),
            #(a: %Element($../Carrier(𝐑 = 𝐑)))
          )),
          value = $Matrices(
              𝐑 = 𝐑,
              m = m,
              n = n
            ).matrix(_1 = {
              #(
                i: %Element($../../../Essentials/Numbers/Natural/Subsets/"Segment (less)"(n = m)),
                j: %Element($../../../Essentials/Numbers/Natural/Subsets/"Segment (less)"(n = n))
              ),
              {a = $../sum(
                𝐑 = 𝐑,
                a = a[i = i, j = j],
                b = b[i = i, j = j]
              )}
          })
        }]
      )
    }]
  )]
}

%../../../../../logics/hlm%

[
  $~"Natural numbers" = $../../../Essentials/Numbers/Natural/"Natural numbers",
  $~"Segment (less)" = $../../../Essentials/Numbers/Natural/Subsets/"Segment (less)"
]

$"additive inverse"(
  𝐑: %Element(
    $../Rings,
    auto = %true
  ),
  m,n: %Element($~"Natural numbers", auto = %true),
  A: %Element($Matrices(𝐑 = 𝐑, m = m, n = n))
): %ExplicitOperator {
  notation = $NegationOperator(operand = A),
  definition = [%structuralCases(
    A,
    $Matrices(𝐑 = 𝐑, m = m, n = n),
    [{
      constructor = $Matrices.matrix,
      parameters = #(_1: %Binder(
        #(
          i: %Element($~"Segment (less)"(n = m)),
          j: %Element($~"Segment (less)"(n = n))
        ),
        #(a: %Element($../Carrier(𝐑 = 𝐑)))
      )),
      value = $Matrices(𝐑 = 𝐑, m = m, n = n).matrix(_1 = {
          #(
            i: %Element($~"Segment (less)"(n = m)),
            j: %Element($~"Segment (less)"(n = n))
          ),
          {a = $../"additive inverse"(
            𝐑 = 𝐑,
            a = a[i = i, j = j]
          )}
      })
    }]
  )]
}

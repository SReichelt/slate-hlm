%../../../../logics/hlm%

[
  $~"Inner operations" = $../../Essentials/Operations/"Inner operations"
]

$commutative(𝐑: %Element($Rings)): %Predicate {
  notation = $Property(operand = 𝐑, property = 'commutative'),
  definition = [%structural(
    𝐑, $Rings,
    [{
      constructor = $Rings.ring,
      parameters = #(
        R: %Set,
        ⊕: %Element($~"Inner operations"(X = R)),
        "0": %Element(R),
        ⊖: %Element($../../Essentials/Functions/Functions(X = R, Y = R)),
        ⊙: %Element($~"Inner operations"(X = R)),
        "1": %Element(R),
        _1: %Constraint($ring(R = R, ⊕ = ⊕, "0" = "0", ⊖ = ⊖, ⊙ = ⊙, "1" = "1"))
      ),
      value = $../../Essentials/Operations/commutative(X = R, Z = R, ∗ = ⊙)
    }]
  )]
}

%../../../../logics/hlm%

/**
 * @references * https://en.wikipedia.org/wiki/Ring_(mathematics)
 */
$Rings: %Construction {
  $ring(
    R: %Set,
    ‚äï: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {R})),
    _1: %Constraint($../../Essentials/Functions/Operations/associative(
      X = {R},
      ‚àó = {‚äï}
    )),
    _2: %Constraint($../../Essentials/Functions/Operations/commutative(
      X = {R},
      Z = {R},
      ‚àó = {‚äï}
    )),
    "0": %Element(R),
    _3: %Constraint(%forall(
      #(a: %Element(R)),
      %equals(
        $../../Essentials/Functions/Operations/value(
          X = {R},
          Y = {R},
          Z = {R},
          ‚àó = {‚äï},
          x = {a},
          y = {"0"}
        ),
        $../../Essentials/Functions/Operations/value(
          X = {R},
          Y = {R},
          Z = {R},
          ‚àó = {‚äï},
          x = {"0"},
          y = {a}
        ),
        a
      )
    )),
    ‚äñ: %Element($../../Essentials/Functions/Functions(
      X = {R},
      Y = {R}
    )),
    _4: %Constraint(%forall(
      #(a: %Element(R)),
      %equals(
        $../../Essentials/Functions/Operations/value(
          X = {R},
          Y = {R},
          Z = {R},
          ‚àó = {‚äï},
          x = {a},
          y = {$../../Essentials/Functions/value(
            X = {R},
            Y = {R},
            f = {‚äñ},
            x = {a}
          )}
        ),
        $../../Essentials/Functions/Operations/value(
          X = {R},
          Y = {R},
          Z = {R},
          ‚àó = {‚äï},
          x = {$../../Essentials/Functions/value(
            X = {R},
            Y = {R},
            f = {‚äñ},
            x = {a}
          )},
          y = {a}
        ),
        "0"
      )
    )),
    ‚äô: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {R})),
    _5: %Constraint($../../Essentials/Functions/Operations/associative(
      X = {R},
      ‚àó = {‚äô}
    )),
    _6: %Constraint(%forall(
      #(a: %Element(R)),
      %equals(
        $../../Essentials/Functions/Operations/value(
          X = {R},
          Y = {R},
          Z = {R},
          ‚àó = {‚äô},
          x = {a},
          y = {"0"}
        ),
        $../../Essentials/Functions/Operations/value(
          X = {R},
          Y = {R},
          Z = {R},
          ‚àó = {‚äô},
          x = {"0"},
          y = {a}
        ),
        "0"
      )
    )),
    _7: %Constraint(%forall(
      #(
        a: %Element(R),
        b: %Element(%previous)
      ),
      %equals(
        $../../Essentials/Functions/Operations/value(
          X = {R},
          Y = {R},
          Z = {R},
          ‚àó = {‚äô},
          x = {a},
          y = {$../../Essentials/Functions/value(
            X = {R},
            Y = {R},
            f = {‚äñ},
            x = {b}
          )}
        ),
        $../../Essentials/Functions/Operations/value(
          X = {R},
          Y = {R},
          Z = {R},
          ‚àó = {‚äô},
          x = {$../../Essentials/Functions/value(
            X = {R},
            Y = {R},
            f = {‚äñ},
            x = {a}
          )},
          y = {b}
        ),
        $../../Essentials/Functions/value(
          X = {R},
          Y = {R},
          f = {‚äñ},
          x = {$../../Essentials/Functions/Operations/value(
            X = {R},
            Y = {R},
            Z = {R},
            ‚àó = {‚äô},
            x = {a},
            y = {b}
          )}
        )
      )
    )),
    "1": %Element(R),
    _8: %Constraint(%forall(
      #(a: %Element(R)),
      %equals(
        $../../Essentials/Functions/Operations/value(
          X = {R},
          Y = {R},
          Z = {R},
          ‚àó = {‚äô},
          x = {a},
          y = {"1"}
        ),
        $../../Essentials/Functions/Operations/value(
          X = {R},
          Y = {R},
          Z = {R},
          ‚àó = {‚äô},
          x = {"1"},
          y = {a}
        ),
        a
      )
    )),
    _9: %Constraint($../../Essentials/Functions/Operations/distributive(
      X = {R},
      ‚àó = {‚äô},
      ‚ãÜ = {‚äï}
    ))
  ): %Constructor {
    display = [$Tuple(
      items = [R, ‚äï, "0", ‚äñ, ‚äô, "1"],
      style = '[]'
    )],
    equalityDefinition = {
      leftParameters = #(
        R: %Set,
        ‚äï: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {R})),
        _1: %Constraint($../../Essentials/Functions/Operations/associative(
          X = {R},
          ‚àó = {‚äï}
        )),
        _2: %Constraint($../../Essentials/Functions/Operations/commutative(
          X = {R},
          Z = {R},
          ‚àó = {‚äï}
        )),
        "0": %Element(R),
        _3: %Constraint(%forall(
          #(a: %Element(R)),
          %equals(
            $../../Essentials/Functions/Operations/value(
              X = {R},
              Y = {R},
              Z = {R},
              ‚àó = {‚äï},
              x = {a},
              y = {"0"}
            ),
            $../../Essentials/Functions/Operations/value(
              X = {R},
              Y = {R},
              Z = {R},
              ‚àó = {‚äï},
              x = {"0"},
              y = {a}
            ),
            a
          )
        )),
        ‚äñ: %Element($../../Essentials/Functions/Functions(
          X = {R},
          Y = {R}
        )),
        _4: %Constraint(%forall(
          #(a: %Element(R)),
          %equals(
            $../../Essentials/Functions/Operations/value(
              X = {R},
              Y = {R},
              Z = {R},
              ‚àó = {‚äï},
              x = {a},
              y = {$../../Essentials/Functions/value(
                X = {R},
                Y = {R},
                f = {‚äñ},
                x = {a}
              )}
            ),
            $../../Essentials/Functions/Operations/value(
              X = {R},
              Y = {R},
              Z = {R},
              ‚àó = {‚äï},
              x = {$../../Essentials/Functions/value(
                X = {R},
                Y = {R},
                f = {‚äñ},
                x = {a}
              )},
              y = {a}
            ),
            "0"
          )
        )),
        ‚äô: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {R})),
        _5: %Constraint($../../Essentials/Functions/Operations/associative(
          X = {R},
          ‚àó = {‚äô}
        )),
        _6: %Constraint(%forall(
          #(a: %Element(R)),
          %equals(
            $../../Essentials/Functions/Operations/value(
              X = {R},
              Y = {R},
              Z = {R},
              ‚àó = {‚äô},
              x = {a},
              y = {"0"}
            ),
            $../../Essentials/Functions/Operations/value(
              X = {R},
              Y = {R},
              Z = {R},
              ‚àó = {‚äô},
              x = {"0"},
              y = {a}
            ),
            "0"
          )
        )),
        _7: %Constraint(%forall(
          #(
            a: %Element(R),
            b: %Element(%previous)
          ),
          %equals(
            $../../Essentials/Functions/Operations/value(
              X = {R},
              Y = {R},
              Z = {R},
              ‚àó = {‚äô},
              x = {a},
              y = {$../../Essentials/Functions/value(
                X = {R},
                Y = {R},
                f = {‚äñ},
                x = {b}
              )}
            ),
            $../../Essentials/Functions/Operations/value(
              X = {R},
              Y = {R},
              Z = {R},
              ‚àó = {‚äô},
              x = {$../../Essentials/Functions/value(
                X = {R},
                Y = {R},
                f = {‚äñ},
                x = {a}
              )},
              y = {b}
            ),
            $../../Essentials/Functions/value(
              X = {R},
              Y = {R},
              f = {‚äñ},
              x = {$../../Essentials/Functions/Operations/value(
                X = {R},
                Y = {R},
                Z = {R},
                ‚àó = {‚äô},
                x = {a},
                y = {b}
              )}
            )
          )
        )),
        "1": %Element(R),
        _8: %Constraint(%forall(
          #(a: %Element(R)),
          %equals(
            $../../Essentials/Functions/Operations/value(
              X = {R},
              Y = {R},
              Z = {R},
              ‚àó = {‚äô},
              x = {a},
              y = {"1"}
            ),
            $../../Essentials/Functions/Operations/value(
              X = {R},
              Y = {R},
              Z = {R},
              ‚àó = {‚äô},
              x = {"1"},
              y = {a}
            ),
            a
          )
        )),
        _9: %Constraint($../../Essentials/Functions/Operations/distributive(
          X = {R},
          ‚àó = {‚äô},
          ‚ãÜ = {‚äï}
        ))
      ),
      rightParameters = #(
        S: %Set,
        ‚ãÜ: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {S})),
        _10: %Constraint($../../Essentials/Functions/Operations/associative(
          X = {S},
          ‚àó = {‚ãÜ}
        )),
        _11: %Constraint($../../Essentials/Functions/Operations/commutative(
          X = {S},
          Z = {S},
          ‚àó = {‚ãÜ}
        )),
        ùü¢: %Element(S),
        _12: %Constraint(%forall(
          #(a: %Element(S)),
          %equals(
            $../../Essentials/Functions/Operations/value(
              X = {S},
              Y = {S},
              Z = {S},
              ‚àó = {‚ãÜ},
              x = {a},
              y = {ùü¢}
            ),
            $../../Essentials/Functions/Operations/value(
              X = {S},
              Y = {S},
              Z = {S},
              ‚àó = {‚ãÜ},
              x = {ùü¢},
              y = {a}
            ),
            a
          )
        )),
        ‚àº: %Element($../../Essentials/Functions/Functions(
          X = {S},
          Y = {S}
        )),
        _13: %Constraint(%forall(
          #(a: %Element(S)),
          %equals(
            $../../Essentials/Functions/Operations/value(
              X = {S},
              Y = {S},
              Z = {S},
              ‚àó = {‚ãÜ},
              x = {a},
              y = {$../../Essentials/Functions/value(
                X = {S},
                Y = {S},
                f = {‚àº},
                x = {a}
              )}
            ),
            $../../Essentials/Functions/Operations/value(
              X = {S},
              Y = {S},
              Z = {S},
              ‚àó = {‚ãÜ},
              x = {$../../Essentials/Functions/value(
                X = {S},
                Y = {S},
                f = {‚àº},
                x = {a}
              )},
              y = {a}
            ),
            ùü¢
          )
        )),
        ‚àó: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {S})),
        _14: %Constraint($../../Essentials/Functions/Operations/associative(
          X = {S},
          ‚àó = {‚àó}
        )),
        _15: %Constraint(%forall(
          #(a: %Element(S)),
          %equals(
            $../../Essentials/Functions/Operations/value(
              X = {S},
              Y = {S},
              Z = {S},
              ‚àó = {‚àó},
              x = {a},
              y = {ùü¢}
            ),
            $../../Essentials/Functions/Operations/value(
              X = {S},
              Y = {S},
              Z = {S},
              ‚àó = {‚àó},
              x = {ùü¢},
              y = {a}
            ),
            ùü¢
          )
        )),
        _16: %Constraint(%forall(
          #(
            a: %Element(S),
            b: %Element(%previous)
          ),
          %equals(
            $../../Essentials/Functions/Operations/value(
              X = {S},
              Y = {S},
              Z = {S},
              ‚àó = {‚àó},
              x = {a},
              y = {$../../Essentials/Functions/value(
                X = {S},
                Y = {S},
                f = {‚àº},
                x = {b}
              )}
            ),
            $../../Essentials/Functions/Operations/value(
              X = {S},
              Y = {S},
              Z = {S},
              ‚àó = {‚àó},
              x = {$../../Essentials/Functions/value(
                X = {S},
                Y = {S},
                f = {‚àº},
                x = {a}
              )},
              y = {b}
            ),
            $../../Essentials/Functions/value(
              X = {S},
              Y = {S},
              f = {‚àº},
              x = {$../../Essentials/Functions/Operations/value(
                X = {S},
                Y = {S},
                Z = {S},
                ‚àó = {‚àó},
                x = {a},
                y = {b}
              )}
            )
          )
        )),
        ùü£: %Element(S),
        _17: %Constraint(%forall(
          #(a: %Element(S)),
          %equals(
            $../../Essentials/Functions/Operations/value(
              X = {S},
              Y = {S},
              Z = {S},
              ‚àó = {‚àó},
              x = {a},
              y = {ùü£}
            ),
            $../../Essentials/Functions/Operations/value(
              X = {S},
              Y = {S},
              Z = {S},
              ‚àó = {‚àó},
              x = {ùü£},
              y = {a}
            ),
            a
          )
        )),
        _18: %Constraint($../../Essentials/Functions/Operations/distributive(
          X = {S},
          ‚àó = {‚àó},
          ‚ãÜ = {‚ãÜ}
        ))
      ),
      definition = [%exists(
        #(œÜ: %Element($../../Essentials/Functions/Bijections(
          X = {R},
          Y = {S}
        ))),
        formula = %and(
          %equals(
            $../Isomorphisms/"inner operation transform"(
              X = {R},
              Y = {S},
              œÜ = {œÜ},
              ‚àó = {‚äï}
            ),
            ‚ãÜ
          ),
          %equals(
            $../Isomorphisms/"element transform"(
              X = {R},
              Y = {S},
              œÜ = {œÜ},
              x = {"0"}
            ),
            ùü¢
          ),
          %equals(
            $../Isomorphisms/"function transform"(
              X = {R},
              Y = {S},
              œÜ = {œÜ},
              f = {‚äñ}
            ),
            ‚àº
          ),
          %equals(
            $../Isomorphisms/"inner operation transform"(
              X = {R},
              Y = {S},
              œÜ = {œÜ},
              ‚àó = {‚äô}
            ),
            ‚àó
          ),
          %equals(
            $../Isomorphisms/"element transform"(
              X = {R},
              Y = {S},
              œÜ = {œÜ},
              x = {"1"}
            ),
            ùü£
          )
        )
      )],
      isomorphic = %true
    }
  }

  display = ['ùì°ùì≤ùì∑ùì∞'],
  definitionDisplay = {
    parameter = #(ùêë: %Expr),
    singularName = 'ring',
    pluralName = 'rings'
  }
}

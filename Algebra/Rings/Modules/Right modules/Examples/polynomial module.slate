%../../../../../../../logics/hlm%

[
  $~Carrier = $../../../Carrier,
  $~Operations = $../../../../../Essentials/Operations/Operations,
  $~Polynomials = $../../../Polynomials/Polynomials
]

/**
 * @references * https://en.wikipedia.org/wiki/Module_(mathematics)#Examples
 *             * https://proofwiki.org/wiki/Definition:Module_Structure_of_Polynomial_Ring
 */
$"polynomial module"(
  𝐑: %Element($../../../Rings),
  X: %Element($../../../../../"Formal systems"/Variables)
): %ExplicitOperator {
  notation = $Function(
    function = 𝐑,
    arguments = [X],
    style = '[]'
  ),
  definition = [$../"Right modules"(𝐑 = 𝐑).module(
      M = $~Polynomials(𝐑 = 𝐑, X = X),
      ⊕ = $~Operations(
          X = $~Polynomials(𝐑 = 𝐑, X = X),
          Y = $~Polynomials(𝐑 = 𝐑, X = X),
          Z = $~Polynomials(𝐑 = 𝐑, X = X)
        ).operation(_1 = {
          #(p,q: %Element($~Polynomials(𝐑 = 𝐑, X = X))),
          {z = $../../../Polynomials/sum(𝐑 = 𝐑, X = X, p = p, q = q)}
      }),
      "0" = $~Polynomials(𝐑 = 𝐑, X = X).zero,
      ⊖ = $../../../../../Essentials/Functions/Functions(
          X = $~Polynomials(𝐑 = 𝐑, X = X),
          Y = $~Polynomials(𝐑 = 𝐑, X = X)
        ).function(_1 = {
          #(p: %Element($~Polynomials(𝐑 = 𝐑, X = X))),
          {y = $../../../Polynomials/"additive inverse"(𝐑 = 𝐑, X = X, p = p)}
      }),
      ⊙ = $~Operations(
          X = $~Polynomials(𝐑 = 𝐑, X = X),
          Y = $~Carrier(𝐑 = 𝐑),
          Z = $~Polynomials(𝐑 = 𝐑, X = X)
        ).operation(_1 = {
          #(
            p: %Element($~Polynomials(𝐑 = 𝐑, X = X)),
            a: %Element($~Carrier(𝐑 = 𝐑))
          ),
          {z = $../../../Polynomials/"product with right scalar"(𝐑 = 𝐑, X = X, p = p, a = a)}
      })
  )]
}

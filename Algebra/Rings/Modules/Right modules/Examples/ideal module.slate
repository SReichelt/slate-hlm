%../../../../../../../logics/hlm%

/**
 * @references * https://en.wikipedia.org/wiki/Module_(mathematics)#Examples
 *             * https://proofwiki.org/wiki/Right_Ideal_is_Right_Module_over_Ring
 */
$"ideal module"(
  𝐑: %Element($../../../Rings),
  I: %Subset($../../../Carrier(𝐑 = {𝐑})),
  _1: %Constraint($../../../Ideals/"right ideal"(
    𝐑 = {𝐑},
    I = {I}
  ))
): %ExplicitOperator {
  notation = $SubSup(
    body = $Parens(
      body = I,
      style = '[]'
    ),
    sub = 𝐑
  ),
  definition = [%structuralCases(
    𝐑,
    $../../../Rings,
    [{
      constructor = $../../../Rings.ring,
      parameters = #(
        R: %Set,
        ⊕: %Element($../../../../../Essentials/Functions/Operations/"Inner operations"(X = {R})),
        "0": %Element(R),
        ⊖: %Element($../../../../../Essentials/Functions/Functions(
          X = {R},
          Y = {R}
        )),
        ⊙: %Element($../../../../../Essentials/Functions/Operations/"Inner operations"(X = {R})),
        "1": %Element(R),
        _1: %Constraint($../../../ring(
          R = {R},
          ⊕ = {⊕},
          "0" = {"0"},
          ⊖ = {⊖},
          ⊙ = {⊙},
          "1" = {"1"}
        ))
      ),
      value = $../"Right modules"(𝐑 = {𝐑}).module(
          M = {I},
          ⊕ = {$../../../../../Essentials/Functions/Operations/"inner operation restriction"(
            X = {R},
            A = {I},
            ∗ = {⊕}
          )},
          "0" = {"0"},
          ⊖ = {$../../../../../Essentials/Functions/"codomain restriction"(
            X = {R},
            A = {I},
            Y = {R},
            B = {I},
            f = {⊖}
          )},
          ⊙ = {$../../../../../Essentials/Functions/Operations/"right operation restriction"(
            X = {R},
            Y = {R},
            A = {I},
            ∗ = {⊙}
          )}
      )
    }]
  )]
}

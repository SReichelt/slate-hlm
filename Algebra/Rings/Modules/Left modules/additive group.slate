%../../../../../../logics/hlm%

[
  $~Operations = $../../../../Essentials/Operations
]

/**
 * @remarks Addition of module elements as a group.
 */
$"additive group"(
  𝐑: %Element(
    $../../Rings,
    auto = %true
  ),
  𝐌: %Element($"Left modules"(𝐑 = 𝐑))
): %ExplicitOperator {
  notation = $Tuple(
    items = [𝐌, '+'],
    style = '[]'
  ),
  definition = [%structuralCases(
    𝐌,
    $"Left modules"(𝐑 = 𝐑),
    [{
      constructor = $"Left modules".module,
      parameters = #(
        M: %Set,
        ⊕: %Element($~Operations/"Inner operations"(X = M)),
        "0": %Element(M),
        ⊖: %Element($../../../../Essentials/Functions/Functions(X = M, Y = M)),
        ⊙: %Element($~Operations/Operations(
          X = $../../Carrier(𝐑 = 𝐑),
          Y = M, Z = M
        )),
        _1: %Constraint($"left module"(𝐑 = 𝐑, M = M, ⊕ = ⊕, "0" = "0", ⊖ = ⊖, ⊙ = ⊙))
      ),
      value = $../../../Groups/Groups.group(G = M, ∗ = ⊕, e = "0", i = ⊖)
    }]
  )]
}

%../../../../../../../logics/hlm%

$basis(
  𝐑: %Element(
    $../../../Rings,
    auto = %true
  ),
  𝐌: %Element(
    $../"Left modules"(𝐑 = {𝐑}),
    auto = %true
  ),
  𝐱: %Element($"Element sequences"(
    𝐑 = {𝐑},
    𝐌 = {𝐌}
  ))
): %Predicate {
  display = [$NounProperty(
    operand = 𝐱,
    singular = 'basis',
    plural = 'bases'
  )],
  definition = [
    %and(
      %not($"linearly dependent"(
        𝐑 = {𝐑},
        𝐌 = {𝐌},
        𝐱 = {𝐱}
      )),
      %setEquals(
        $Span(
          𝐑 = {𝐑},
          𝐌 = {𝐌},
          𝐱 = {𝐱}
        ),
        $../Carrier(
          𝐑 = {𝐑},
          𝐌 = {𝐌}
        )
      )
    ),
    %forall(
      #(m: %Element($../Carrier(
        𝐑 = {𝐑},
        𝐌 = {𝐌}
      ))),
      %existsUnique(
        #(𝐚: %Element($Coordinates(
          𝐑 = {𝐑},
          𝐌 = {𝐌},
          𝐱 = {𝐱}
        ))),
        formula = %equals(
          $"linear combination"(
            𝐑 = {𝐑},
            𝐌 = {𝐌},
            𝐱 = {𝐱},
            𝐚 = {𝐚}
          ),
          m
        )
      )
    )
  ]
}

%../../../../../../../logics/hlm%

/**
 * @references * https://en.wikipedia.org/wiki/Module_(mathematics)#Submodules_and_homomorphisms
 *             * https://mathworld.wolfram.com/Submodule.html
 *             * https://proofwiki.org/wiki/Definition:Submodule
 *             * https://ncatlab.org/nlab/show/submodule
 *             * https://leanprover-community.github.io/mathlib_docs/algebra/module/basic.html#submodule
 */
$"submodule set"(
  𝐑: %Element(
    $../../../Rings,
    auto = %true
  ),
  𝐌: %Element($../"Left modules"(𝐑 = 𝐑)),
  S: %Subset($../Carrier(
    𝐑 = 𝐑,
    𝐌 = 𝐌
  ))
): %Predicate {
  notation = $NounRelation(
    operands = [S, 𝐌],
    singular = 'submodule',
    plural = 'submodules'
  ),
  definition = [
    %and(
      %forall(
        #(a,b: %Element(S)),
        %in(
          $../sum(
            𝐑 = 𝐑,
            𝐌 = 𝐌,
            x = a,
            y = b
          ),
          S
        )
      ),
      %in(
        $../zero(
          𝐑 = 𝐑,
          𝐌 = 𝐌
        ),
        S
      ),
      %forall(
        #(c: %Element(S)),
        %in(
          $../"additive inverse"(
            𝐑 = 𝐑,
            𝐌 = 𝐌,
            x = c
          ),
          S
        )
      ),
      %forall(
        #(
          d: %Element($../../../Carrier(𝐑 = 𝐑)),
          e: %Element(S)
        ),
        %in(
          $../product(
            𝐑 = 𝐑,
            𝐌 = 𝐌,
            a = d,
            x = e
          ),
          S
        )
      )
    ),
    %forall(
      #(
        d: %Element($../../../Carrier(𝐑 = 𝐑)),
        e: %Element(S)
      ),
      %in(
        $../product(
          𝐑 = 𝐑,
          𝐌 = 𝐌,
          a = d,
          x = e
        ),
        S
      )
    )
  ]
}

%../../../../../logics/hlm%

/**
 * @remarks This definition is useful to build polynomials in their familiar style.
 */
$monomial(
  𝐑: %Element(
    $../Rings,
    auto = %true
  ),
  X: %Element(
    $../../../"Formal systems"/Variables,
    auto = %true
  ),
  a: %Element($../Carrier(𝐑 = 𝐑)),
  n: %Element($../../../Essentials/Numbers/Natural/"Natural numbers")
): %ExplicitOperator {
  notation = $Operator(
    symbol = '',
    operands = [
      a,
      $SubSup(
        body = X,
        sup = n
      )
    ],
    space = ''
  ),
  definition = [%structuralCases(
    n,
    $../../../Essentials/Numbers/Natural/"Natural numbers",
    [
      {
        constructor = $../../../Essentials/Numbers/Natural/"Natural numbers".zero,
        value = a,
        rewrite = %true
      },
      {
        constructor = $../../../Essentials/Numbers/Natural/"Natural numbers".successor,
        parameters = #(m: %Element($../../../Essentials/Numbers/Natural/"Natural numbers")),
        value = $normalized(
          𝐑 = 𝐑,
          X = X,
          p = $monomial(
            𝐑 = 𝐑,
            X = X,
            a = a,
            n = m
          ),
          a = $../zero(𝐑 = 𝐑)
        ),
        rewrite = %true
      }
    ]
  )]
}

%../../../../../logics/hlm%

/**
 * @remarks This is mostly a helper definition to define the degree (see `$degree`). However, in many cases this definition may actually be more useful than the degree itself.
 *
 *          It is called "dimension" because for a field `𝐅`, the set of polynomials over `𝐅` with "dimension" `d` form a `d`-dimensional vector space over `𝐅`.
 */
$dimension(
  𝐑: %Element(
    $../Rings,
    auto = %true
  ),
  X: %Element(
    $../../../"Formal systems"/Variables,
    auto = %true
  ),
  p: %Element($Polynomials(
    𝐑 = {𝐑},
    X = {X}
  ))
): %ExplicitOperator {
  notation = [$Function(
    function = 'dim',
    arguments = [p]
  )],
  definition = [%structuralCases(
    p,
    $Polynomials(
      𝐑 = {𝐑},
      X = {X}
    ),
    [
      {
        constructor = $Polynomials.zero,
        value = $../../../Essentials/Numbers/Natural/number(value = 0)
      },
      {
        constructor = $Polynomials.term,
        parameters = #(
          q: %Element($Polynomials(
            𝐑 = {𝐑},
            X = {X}
          )),
          a: %Element($../Carrier(𝐑 = {𝐑})),
          _1: %Constraint(%or(
            %not(%equals(
              q,
              $Polynomials(
                  𝐑 = {𝐑},
                  X = {X}
                ).zero
            )),
            %not(%equals(
              a,
              $../zero(𝐑 = {𝐑})
            ))
          ))
        ),
        value = $../../../Essentials/Numbers/Natural/sum(
          m = {$dimension(
            𝐑 = {𝐑},
            X = {X},
            p = {q}
          )},
          n = {$../../../Essentials/Numbers/Natural/number(value = 1)}
        )
      }
    ]
  )]
}

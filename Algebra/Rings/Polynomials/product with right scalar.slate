%../../../../../logics/hlm%

$"product with right scalar"(
  𝐑: %Element(
    $../Rings,
    auto = %true
  ),
  X: %Element(
    $../../../"Formal systems"/Variables,
    auto = %true
  ),
  p: %Element($Polynomials(
    𝐑 = 𝐑,
    X = X
  )),
  a: %Element($../Carrier(𝐑 = 𝐑))
): %ExplicitOperator {
  notation = $MultiplicationOperator(operands = [p, a]),
  definition = [%structuralCases(
    p,
    $Polynomials(
      𝐑 = 𝐑,
      X = X
    ),
    [
      {
        constructor = $Polynomials.zero,
        value = $Polynomials(
            𝐑 = 𝐑,
            X = X
          ).zero
      },
      {
        constructor = $Polynomials.term,
        parameters = #(
          q: %Element($Polynomials(
            𝐑 = 𝐑,
            X = X
          )),
          b: %Element($../Carrier(𝐑 = 𝐑)),
          _1: %Constraint(%or(
            %not(%equals(
              q,
              $Polynomials(
                  𝐑 = 𝐑,
                  X = X
                ).zero
            )),
            %not(%equals(
              b,
              $../zero(𝐑 = 𝐑)
            ))
          ))
        ),
        value = $normalized(
          𝐑 = 𝐑,
          X = X,
          p = $"product with right scalar"(
            𝐑 = 𝐑,
            X = X,
            p = q,
            a = a
          ),
          a = $../product(
            𝐑 = 𝐑,
            a = b,
            b = a
          )
        )
      }
    ]
  )]
}

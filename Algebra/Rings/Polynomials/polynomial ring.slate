%../../../../../logics/hlm%

/**
 * @references * https://en.wikipedia.org/wiki/Polynomial_ring
 *             * https://proofwiki.org/wiki/Definition:Polynomial_Ring#One_Indeterminate
 *             * https://ncatlab.org/nlab/show/polynomial
 *             * https://leanprover-community.github.io/mathlib_docs/data/polynomial.html#polynomial.comm_semiring
 */
$"polynomial ring"(
  𝐑: %Element(
    $../Rings,
    auto = %true
  ),
  X: %Element($../../../"Formal systems"/Variables)
): %ExplicitOperator {
  notation = $Function(
    function = 𝐑,
    arguments = [X],
    style = '[]'
  ),
  definition = [$../Rings.ring(
    R = {$Polynomials(
      𝐑 = {𝐑},
      X = {X}
    )},
    ⊕ = {$../../../Essentials/Operations/Operations(
        X = {$Polynomials(
          𝐑 = {𝐑},
          X = {X}
        )},
        Y = {$Polynomials(
          𝐑 = {𝐑},
          X = {X}
        )},
        Z = {$Polynomials(
          𝐑 = {𝐑},
          X = {X}
        )}
      ).operation(_x = {
        #(p,q: %Element($Polynomials(
          𝐑 = {𝐑},
          X = {X}
        ))),
        {z = {$sum(
          𝐑 = {𝐑},
          X = {X},
          p = {p},
          q = {q}
        )}}
    })},
    "0" = {$Polynomials(
        𝐑 = {𝐑},
        X = {X}
      ).zero},
    ⊖ = {$../../../Essentials/Functions/Functions(
        X = {$Polynomials(
          𝐑 = {𝐑},
          X = {X}
        )},
        Y = {$Polynomials(
          𝐑 = {𝐑},
          X = {X}
        )}
      ).function(_x = {
        #(p: %Element($Polynomials(
          𝐑 = {𝐑},
          X = {X}
        ))),
        {y = {$"additive inverse"(
          𝐑 = {𝐑},
          X = {X},
          p = {p}
        )}}
    })},
    ⊙ = {$../../../Essentials/Operations/Operations(
        X = {$Polynomials(
          𝐑 = {𝐑},
          X = {X}
        )},
        Y = {$Polynomials(
          𝐑 = {𝐑},
          X = {X}
        )},
        Z = {$Polynomials(
          𝐑 = {𝐑},
          X = {X}
        )}
      ).operation(_x = {
        #(p,q: %Element($Polynomials(
          𝐑 = {𝐑},
          X = {X}
        ))),
        {z = {$product(
          𝐑 = {𝐑},
          X = {X},
          p = {p},
          q = {q}
        )}}
    })},
    "1" = {$../one(𝐑 = {𝐑})}
  )]
}

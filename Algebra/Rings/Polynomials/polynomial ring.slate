%../../../../../logics/hlm%

$"polynomial ring"(
  𝐑: %Element(
    $../Rings,
    auto = %true
  ),
  X: %Element($../../../"Formal systems"/Variables)
): %ExplicitOperator {
  display = [$Function(
    function = 𝐑,
    arguments = [X],
    style = '[]'
  )],
  definition = [$../Rings.ring(
    R = {$Polynomials(
      𝐑 = {𝐑},
      X = {X}
    )},
    ⊕ = {$../../../Essentials/Functions/Operations/operator(
      X = {$Polynomials(
        𝐑 = {𝐑},
        X = {X}
      )},
      Y = {$Polynomials(
        𝐑 = {𝐑},
        X = {X}
      )},
      Z = {$Polynomials(
        𝐑 = {𝐑},
        X = {X}
      )},
      parameters = #(
        p: %Element($Polynomials(
          𝐑 = {𝐑},
          X = {X}
        )),
        q: %Element(%previous)
      ),
      operator = $sum(
        𝐑 = {𝐑},
        X = {X},
        p = {p},
        q = {q}
      )
    )},
    "0" = {$Polynomials(
        𝐑 = {𝐑},
        X = {X}
      ).zero},
    ⊖ = {$../../../Essentials/Functions/operator(
      X = {$Polynomials(
        𝐑 = {𝐑},
        X = {X}
      )},
      Y = {$Polynomials(
        𝐑 = {𝐑},
        X = {X}
      )},
      parameter = #(p: %Element($Polynomials(
        𝐑 = {𝐑},
        X = {X}
      ))),
      operator = $"additive inverse"(
        𝐑 = {𝐑},
        X = {X},
        p = {p}
      )
    )},
    ⊙ = {$../../../Essentials/Functions/Operations/operator(
      X = {$Polynomials(
        𝐑 = {𝐑},
        X = {X}
      )},
      Y = {$Polynomials(
        𝐑 = {𝐑},
        X = {X}
      )},
      Z = {$Polynomials(
        𝐑 = {𝐑},
        X = {X}
      )},
      parameters = #(
        p: %Element($Polynomials(
          𝐑 = {𝐑},
          X = {X}
        )),
        q: %Element(%previous)
      ),
      operator = $product(
        𝐑 = {𝐑},
        X = {X},
        p = {p},
        q = {q}
      )
    )},
    "1" = {$../one(𝐑 = {𝐑})}
  )]
}

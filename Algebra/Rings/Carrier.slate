%../../../../logics/hlm%

/**
 * @remarks This definition retrieves a representative carrier set from a ring (which is actually an equivalence class of rings), and enables typical abuse of notation.
 */
$Carrier(𝐑: %Element($Rings)): %SetOperator {
  notation = [$Parens(
    body = 𝐑,
    style = '()'
  )],
  definitionNotation = {
    parameter = #(a: %Expr),
    notation = [$ElementParameter(
      element = a,
      set = 𝐑
    )]
  },
  definition = [%setStructuralCases(
    𝐑,
    $Rings,
    [{
      constructor = $Rings.ring,
      parameters = #(
        R: %Set,
        ⊕: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {R})),
        "0": %Element(R),
        ⊖: %Element($../../Essentials/Functions/Functions(
          X = {R},
          Y = {R}
        )),
        ⊙: %Element($../../Essentials/Functions/Operations/"Inner operations"(X = {R})),
        "1": %Element(R),
        _1: %Constraint($ring(
          R = {R},
          ⊕ = {⊕},
          "0" = {"0"},
          ⊖ = {⊖},
          ⊙ = {⊙},
          "1" = {"1"}
        ))
      ),
      value = R
    }]
  )]
}

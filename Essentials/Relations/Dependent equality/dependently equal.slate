%../../../../../logics/hlm%

$"dependently equal"(
  I: %Set(auto = %true),
  _1: %Binder(
    #(i: %Element(I)),
    #(S: %Set(auto = %true))
  ),
  ≃: %Element($"Dependent equality"(
    I = I,
    _1 = {
      #(i: %Element(I)),
      {S = S[i = i]}
    }
  )),
  a,b: %Element(
    I,
    auto = %true
  ),
  s: %Element(S[i = a]),
  t: %Element(S[i = b])
): %Predicate {
  notation = $Relation(
    symbol = ≃,
    operands = [s, t]
  ),
  definition = [%structural(
    ≃,
    $"Dependent equality"(
      I = I,
      _1 = {
        #(i: %Element(I)),
        {S = S[i = i]}
      }
    ),
    [{
      constructor = $"Dependent equality".equality,
      parameters = #(
        _2: %Binder(
          #(
            j,k: %Element(I),
            _3: %Constraint(%equals(j, k))
          ),
          #(≡: %Element($../Relations(S = S[i = j], T = S[i = k])))
        ),
        _4: %Constraint(%forall(
          #(i: %Element(I)),
          %equals(
            ≡[j = i, k = i],
            $../equality(S = S[i = i])
          )
        ))
      ),
      value = $../related(S = S[i = a], T = S[i = b], ≺ = ≡[j = a, k = b], s = s, t = t)
    }]
  )]
}

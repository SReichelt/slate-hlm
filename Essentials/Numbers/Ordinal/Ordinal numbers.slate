%../../../../../logics/hlm%

/**
 * @references * https://en.wikipedia.org/wiki/Ordinal_number
 *             * https://mathworld.wolfram.com/OrdinalNumber.html
 *             * https://proofwiki.org/wiki/Definition:Ordinal
 *             * https://ncatlab.org/nlab/show/ordinal+number
 *             * https://leanprover-community.github.io/mathlib_docs/set_theory/ordinal.html#ordinal
 */
$"Ordinal numbers": %Construction {
  $"order type"(
    S: %Set,
    ⪯: %Element($../../Relations/Endorelations(S = {S})),
    _1: %Constraint($../../Relations/"well-order"(
      S = {S},
      ⪯ = {⪯}
    ))
  ): %Constructor {
    display = [$Tuple(
      items = [S, ⪯],
      style = '[]'
    )],
    equalityDefinition = {
      leftParameters = #(
        S: %Set,
        ⪯: %Element($../../Relations/Endorelations(S = {S})),
        _1: %Constraint($../../Relations/"well-order"(
          S = {S},
          ⪯ = {⪯}
        ))
      ),
      rightParameters = #(
        T: %Set,
        ⊑: %Element($../../Relations/Endorelations(S = {T})),
        _1: %Constraint($../../Relations/"well-order"(
          S = {T},
          ⪯ = {⊑}
        ))
      ),
      definition = [%exists(
        #(φ: %Element($../../Functions/Bijections(
          X = {S},
          Y = {T}
        ))),
        formula = %equals(
          $../../../Algebra/Generic/Isomorphisms/"relation transport"(
            X = {S},
            Y = {T},
            φ = {φ},
            ≺ = {⪯}
          ),
          ⊑
        )
      )],
      isomorphic = %true
    }
  }

  display = ['𝓞𝓻𝓭'],
  embedding = {
    parameter = #(n: %Element($../Natural/"Natural numbers")),
    target = $"Ordinal numbers"."order type"(
      S = {$../Natural/Subsets/"Segment (less)"(n = {n})},
      ⪯ = {$../../Relations/restriction(
        S = {$../Natural/"Natural numbers"},
        T = {$../Natural/Subsets/"Segment (less)"(n = {n})},
        ≺ = {$../../Relations/predicate(
          S = {$../Natural/"Natural numbers"},
          T = {$../Natural/"Natural numbers"},
          parameters = #(
            m: %Element($../Natural/"Natural numbers"),
            n: %Element(%previous)
          ),
          predicate = $../Natural/"less or equal"(
            m = {m},
            n = {n}
          )
        )}
      )}
    )
  }
}

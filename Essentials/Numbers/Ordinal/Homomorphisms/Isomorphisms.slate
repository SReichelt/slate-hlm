%../../../../../../logics/hlm%

/**
 * @references * https://en.wikipedia.org/wiki/Order_isomorphism
 *             * https://proofwiki.org/wiki/Definition:Order_Isomorphism
 *             * https://leanprover-community.github.io/mathlib_docs/order/order_iso.html#order_iso
 */
$Isomorphisms(
  α: %Element($../"Ordinal numbers"),
  β: %Element(%previous)
): %SetOperator {
  notation = $Function(
    function = 'Iso',
    arguments = [α, β]
  ),
  definitionNotation = {
    parameter = #(φ: %Expr),
    notation = $FunctionDeclaration(
      function = φ,
      symbol = '↔',
      operands = [α, β]
    ),
    singularName = 'isomorphism',
    pluralName = 'isomorphisms',
    nameOptional = %true
  },
  definition = [
    %subset(
      #(φ: %Element($Homomorphisms(
        α = {α},
        β = {β}
      ))),
      $../../../Functions/bijective(
        X = {$../Carrier(α = {α})},
        Y = {$../Carrier(α = {β})},
        f = {φ}
      )
    ),
    %subset(
      #(f: %Element($../../../Functions/Bijections(
        X = {$../Carrier(α = {α})},
        Y = {$../Carrier(α = {β})}
      ))),
      %forall(
        #(
          a: %Element($../Carrier(α = {α})),
          b: %Element(%previous)
        ),
        %equiv(
          $../before(
            α = {α},
            a = {a},
            b = {b}
          ),
          $../before(
            α = {β},
            a = {$../../../Functions/value(
              X = {$../Carrier(α = {α})},
              Y = {$../Carrier(α = {β})},
              f = {f},
              x = {a}
            )},
            b = {$../../../Functions/value(
              X = {$../Carrier(α = {α})},
              Y = {$../Carrier(α = {β})},
              f = {f},
              x = {b}
            )}
          )
        )
      )
    )
  ]
}

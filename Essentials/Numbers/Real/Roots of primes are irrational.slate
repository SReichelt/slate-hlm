%../../../../../logics/hlm%

[
  $~Integers = $../Integer/Integers,
  $~"Natural numbers" = $../Natural/"Natural numbers",
  $~"Positive numbers" = $../Integer/Subsets/"Positive numbers",
  $~"Prime and power divisibility criterion" = $../Integer/Prime/"Prime and power divisibility criterion",
  $~"Prime numbers" = $../Natural/Prime/"Prime numbers",
  $~coprime = $../Integer/coprime,
  $~divisible = $../Integer/divisible,
  $~number = $../Natural/number,
  $~power = $../Integer/power,
  $~product = $../Integer/product,
  $~sum = $../Natural/sum
]

/**
 * @references * https://proofwiki.org/wiki/Square_Root_of_Prime_is_Irrational (for `n` = 2)
 *             * https://isabelle.in.tum.de/website-Isabelle2012/dist/library/HOL/ex/Sqrt.html (for `n` = 2)
 *             * https://leanprover-community.github.io/mathlib_docs/data/real/irrational.html#nat.prime.irrational_sqrt (for `n` = 2)
 *             * https://isabelle.in.tum.de/dist/library/HOL/HOL-ex/Sqrt.html (for `n` = 2)
 *             * http://www.mizar.org/version/current/html/irrat_1.html#T1 (for `n` = 2)
 */
$"Roots of primes are irrational"(
  p: %Element($~"Prime numbers"),
  n: %Element($../Natural/Subsets/"Segment (greater)"(n = $~number(value = 1)))
): %StandardTheorem {
  claim = %not($rational(a = $root(a = p, n = n))),
  proofs = [{steps = #(_: %ProveByContradiction({
    parameters = #(_: %Constraint($rational(a = $root(a = p, n = n)))),
    steps = #(
      _: %UseDef(result = %existsUnique(
        #(
          a: %Element($~"Positive numbers"),
          b: %Element($~Integers),
          _1: %Constraint($~coprime(a = a, b = b))
        ),
        formula = %equals(
          $root(a = p, n = n),
          $quotient(a = b, b = a)
        )
      )),
      _: %UseExists(#(
        a: %Element($~"Positive numbers"),
        b: %Element($~Integers),
        _1: %Constraint($~coprime(a = a, b = b))
      )),
      _: %UseDef(
        side = 1,
        result = %equals(
          p,
          $power(
            a = $quotient(a = b, b = a),
            n = n
          )
        )
      ),
      _: %Substitute(
        #(_: %UseTheorem(
          $"Power base quotient law"(b = b, a = a, n = n),
          result = %equals(
            $power(
              a = $quotient(a = b, b = a),
              n = n
            ),
            $quotient(
              a = $power(a = b, n = n),
              b = $power(a = a, n = n)
            )
          )
        )),
        1,
        %equals(
          p,
          $quotient(
            a = $power(a = b, n = n),
            b = $power(a = a, n = n)
          )
        )
      ),
      _2: %UseDef(
        side = 2,
        result = %equals(
          $~product(
            a = p,
            b = $~power(a = a, n = n)
          ),
          $~power(a = b, n = n)
        )
      ),
      _7: %State(
        $~divisible(
          a = p,
          b = $~power(a = b, n = n)
        ),
        proof = {steps = #(_: %ProveDef(proof = {
          goal = %exists(
            #(x: %Element($~Integers)),
            formula = %equals(
              $~product(a = p, b = x),
              $~power(a = b, n = n)
            )
          ),
          steps = #(_: %ProveExists({x = $~power(a = a, n = n)}))
        }))}
      ),
      _4: %UseTheorem(
        $~"Prime and power divisibility criterion"(p = p, a = b, n = n),
        input = #(_: %Consider(_7)),
        result = $~divisible(a = p, b = b)
      ),
      _8: %State(
        $~divisible(
          a = p,
          b = $~power(a = a, n = n)
        ),
        proof = {steps = #(_: %ProveDef(proof = {
          goal = %exists(
            #(y: %Element($~Integers)),
            formula = %equals(
              $~product(a = p, b = y),
              $~power(a = a, n = n)
            )
          ),
          steps = #(
            _: %Consider(_4),
            _: %UseDef(result = %exists(
              #(z: %Element($~Integers)),
              formula = %equals(
                $~product(a = p, b = z),
                b
              )
            )),
            _3: %UseExists(#(z: %Element($~Integers))),
            _: %Consider(n),
            _: %UseDef(result = %exists(
              #(m: %Element($~"Natural numbers")),
              formula = %equals(
                $~sum(
                  m = $~number(value = 2),
                  n = m
                ),
                n
              )
            )),
            _5: %UseExists(#(m: %Element($~"Natural numbers"))),
            _: %ProveExists(
              {y = $~product(
                a = %associative($~product(
                  a = $~power(a = b, n = m),
                  b = z
                )),
                b = z
              )},
              proof = {steps = #(
                _: %Consider(_2),
                _: %Substitute(
                  #(_: %Consider(_5)),
                  2,
                  %equals(
                    $~product(
                      a = p,
                      b = $~power(a = a, n = n)
                    ),
                    $~power(
                      a = b,
                      n = $~sum(
                        m = $~number(value = 2),
                        n = m
                      )
                    )
                  )
                ),
                _: %Unfold(%equals(
                  $~product(
                    a = p,
                    b = $~power(a = a, n = n)
                  ),
                  $~product(
                    a = %associative($~product(
                      a = $~power(a = b, n = m),
                      b = b
                    )),
                    b = b
                  )
                )),
                _6: %Substitute(
                  #(_: %Consider(_3)),
                  2,
                  %equals(
                    $~product(
                      a = p,
                      b = $~power(a = a, n = n)
                    ),
                    $~product(
                      a = %associative($~product(
                        a = $~power(a = b, n = m),
                        b = %associative($~product(a = p, b = z))
                      )),
                      b = %associative($~product(a = p, b = z))
                    )
                  )
                ),
                _: %UseTheorem(
                  $../Integer/"Multiplication of a nonzero number is injective"(
                    a = $~product(
                      a = %associative($~product(
                        a = $~power(a = b, n = m),
                        b = z
                      )),
                      b = %associative($~product(a = p, b = z))
                    ),
                    b = $~power(a = a, n = n),
                    c = p,
                    _1 = {proof = {steps = #(_: %Consider(_6))}}
                  ),
                  result = %equals(
                    $~power(a = a, n = n),
                    $~product(
                      a = %associative($~product(
                        a = $~power(a = b, n = m),
                        b = z
                      )),
                      b = %associative($~product(a = p, b = z))
                    )
                  )
                )
              )}
            )
          )
        }))}
      ),
      _: %UseTheorem(
        $~"Prime and power divisibility criterion"(p = p, a = a, n = n),
        input = #(_: %Consider(_8)),
        result = $~divisible(a = p, b = a)
      ),
      _: %State(
        %not($~coprime(a = a, b = b)),
        proof = {steps = #(_: %ProveDef(proof = {
          goal = %exists(
            #(q: %Element($~"Prime numbers")),
            formula = %and(
              $~divisible(a = q, b = a),
              $~divisible(a = q, b = b)
            )
          ),
          steps = #(_: %ProveExists({q = p}))
        }))}
      )
    )
  }))}]
}

%../../../../../logics/hlm%

[
  $~"Infinite sequences" = $../../Sequences/"Infinite sequences",
  $~"Natural numbers" = $../Natural/"Natural numbers",
  $~Rational = $../Rational,
  $~"Rational numbers" = $../Rational/"Rational numbers",
  $~cauchy = $../Rational/Sequences/cauchy
]

/**
 * @references * https://coq.inria.fr/library/Coq.Reals.Cauchy.ConstructiveCauchyReals.html#CRealLe
 *             * https://leanprover-community.github.io/mathlib_docs/data/real/basic.html#real.le
 */
$"less or equal"(a,b: %Element($"Real numbers")): %Predicate {
  properties = {negation = $less(b = a, a = b)},
  notation = $LessOrEqualRelation(operands = [a, b]),
  definition = [%structural(
    b, $"Real numbers",
    [{
      constructor = $"Real numbers".class,
      parameters = #(
        r_b: %Element($~"Infinite sequences"(S = $~"Rational numbers")),
        _2: %Constraint($~cauchy(ùêö = r_b))
      ),
      value = %structural(
        a, $"Real numbers",
        [{
          constructor = $"Real numbers".class,
          parameters = #(
            r_a: %Element($~"Infinite sequences"(S = $~"Rational numbers")),
            _1: %Constraint($~cauchy(ùêö = r_a))
          ),
          value = %structural(
            r_b,
            $~"Infinite sequences"(S = $~"Rational numbers"),
            [{
              constructor = $~"Infinite sequences".sequence,
              parameters = #(_2: %Binder(
                #(n: %Element($~"Natural numbers")),
                #(y: %Element($~"Rational numbers"))
              )),
              value = %structural(
                r_a,
                $~"Infinite sequences"(S = $~"Rational numbers"),
                [{
                  constructor = $~"Infinite sequences".sequence,
                  parameters = #(_1: %Binder(
                    #(n: %Element($~"Natural numbers")),
                    #(x: %Element($~"Rational numbers"))
                  )),
                  value = %forall(
                    #(Œµ: %Element($~Rational/Subsets/"Positive numbers")),
                    %exists(
                      #(n: %Element($~"Natural numbers")),
                      formula = %forall(
                        #(m: %Element($../Natural/Subsets/"Segment (greater or equal)"(n = n))),
                        $~Rational/"less or equal"(
                          a = x[n = m],
                          b = $~Rational/sum(
                            a = y[n = m],
                            b = Œµ
                          )
                        )
                      )
                    )
                  )
                }]
              )
            }]
          )
        }]
      )
    }]
  )]
}

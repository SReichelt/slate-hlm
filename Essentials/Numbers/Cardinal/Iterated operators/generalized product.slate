%../../../../../../logics/hlm%

/**
 * @remarks In contrast to the previous definition, this definition works for arbitrary index sets `I`, using the generalized Cartesian product to multiply cardinal numbers.
 */
$"generalized product"(
  I: %Set,
  _1: %Binder(
    #(i: %Element(I)),
    #(κ: %Element($../"Cardinal numbers"))
  )
): %ExplicitOperator {
  notation = $LargeOperator(
    symbol = '∏',
    operand = κ,
    under = $ElementRelation(operands = [i, I])
  ),
  definition = [$../"Cardinal numbers".cardinality(S = $../../../Sets/"Generalized operators"/"Generalized cartesian product"(
    I = I,
    _1 = {
      #(j: %Element(I)),
      {S = $../Carrier(κ = κ[i = j])}
    }
  ))]
}

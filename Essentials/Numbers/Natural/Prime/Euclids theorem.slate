%../../../../../../logics/hlm%

/**
 * @references * https://en.wikipedia.org/wiki/Euclid%27s_theorem
 *             * https://mathworld.wolfram.com/EuclidsTheorems.html
 *             * https://proofwiki.org/wiki/Euclid%27s_Theorem
 *             * https://leanprover-community.github.io/mathlib_docs/data/nat/prime.html#nat.exists_infinite_primes
 */
$"Euclids theorem": %StandardTheorem {
  claim = %not($../../../Sets/finite(S = {$"Prime numbers"})),
  proofs = [{steps = #(_: %ProveNeg({
    parameters = #(_: %Constraint($../../../Sets/finite(S = {$"Prime numbers"}))),
    steps = #(
      _: %UseDef(result = %exists(#(
        n: %Element($../"Natural numbers"),
        f: %Element($../../../Functions/Bijections(
          X = {$../Subsets/"Segment (less)"(n = {n})},
          Y = {$"Prime numbers"}
        ))
      ))),
      _: %UseExists(#(
        n: %Element($../"Natural numbers"),
        f: %Element($../../../Functions/Bijections(
          X = {$../Subsets/"Segment (less)"(n = {n})},
          Y = {$"Prime numbers"}
        ))
      )),
      a: %Def($../../../Functions/Operations/"Iterated operations"/"indexed by natural number"(
        X = {$../"Natural numbers"},
        â¨‚ = {$../"Iterated operators"/"iterated product"},
        n = {n},
        i = {
          #(i: %Element($../Subsets/"Segment (less)"(n = {n}))),
          {a = {$../../../Functions/value(
            X = {$../Subsets/"Segment (less)"(n = {n})},
            Y = {$"Prime numbers"},
            f = {f},
            x = {i}
          )}}
        }
      )),
      _: %UseTheorem(
        $../"Iterated operators"/"Iterated product of positive numbers grows"(
          n = {n},
          i = {
            #(j: %Element($../Subsets/"Segment (less)"(n = {n}))),
            {a = {$../../../Functions/value(
              X = {$../Subsets/"Segment (less)"(n = {n})},
              Y = {$"Prime numbers"},
              f = {f},
              x = {j}
            )}}
          },
          m = {$../number(value = 0)}
        ),
        $../"less or equal"(
          m = {$../number(value = 1)},
          n = {a}
        )
      ),
      b: %Def($../sum(
        m = {a},
        n = {$../number(value = 1)}
      )),
      _: %UseTheorem(
        $../"Successor is always greater"(n = {a}),
        $../less(
          n = {b},
          m = {a}
        )
      ),
      _: %UseTheorem(
        $../"Less or equal and less combine to less"(
          a = {$../number(value = 1)},
          b = {a},
          c = {b}
        ),
        $../less(
          n = {b},
          m = {$../number(value = 1)}
        )
      ),
      _: %UseTheorem(
        $"Every number greater than one has a prime factor"(n = {b}),
        %exists(
          #(p: %Element($"Prime numbers")),
          formula = $../divisible(
            m = {p},
            n = {b}
          )
        )
      ),
      _: %UseExists(#(p: %Element($"Prime numbers"))),
      _: %ResolveDef($../divisible(
        m = {p},
        n = {$../sum(
          m = {a},
          n = {$../number(value = 1)}
        )}
      )),
      _: %UseTheorem(
        $../"Iterated operators"/"Iterated product is a multiple of each element"(
          n = {n},
          i = {
            #(k: %Element($../Subsets/"Segment (less)"(n = {n}))),
            {a = {$../../../Functions/value(
              X = {$../Subsets/"Segment (less)"(n = {n})},
              Y = {$"Prime numbers"},
              f = {f},
              x = {k}
            )}}
          },
          j = {$../../../Functions/value(
            X = {$"Prime numbers"},
            Y = {$../Subsets/"Segment (less)"(n = {n})},
            f = {$../../../Functions/inverse(
              X = {$../Subsets/"Segment (less)"(n = {n})},
              Y = {$"Prime numbers"},
              f = {f}
            )},
            x = {p}
          )}
        ),
        $../divisible(
          m = {$../../../Functions/value(
            X = {$../Subsets/"Segment (less)"(n = {n})},
            Y = {$"Prime numbers"},
            f = {f},
            x = {$../../../Functions/value(
              X = {$"Prime numbers"},
              Y = {$../Subsets/"Segment (less)"(n = {n})},
              f = {$../../../Functions/inverse(
                X = {$../Subsets/"Segment (less)"(n = {n})},
                Y = {$"Prime numbers"},
                f = {f}
              )},
              x = {p}
            )}
          )},
          n = {a}
        )
      ),
      _: %Substitute(
        #(_: %UseTheorem(
          $../../../Functions/"Application of function after inverse is neutral"(
            X = {$../Subsets/"Segment (less)"(n = {n})},
            Y = {$"Prime numbers"},
            f = {f},
            y = {p}
          ),
          %equals(
            $../../../Functions/value(
              X = {$../Subsets/"Segment (less)"(n = {n})},
              Y = {$"Prime numbers"},
              f = {f},
              x = {$../../../Functions/value(
                X = {$"Prime numbers"},
                Y = {$../Subsets/"Segment (less)"(n = {n})},
                f = {$../../../Functions/inverse(
                  X = {$../Subsets/"Segment (less)"(n = {n})},
                  Y = {$"Prime numbers"},
                  f = {f}
                )},
                x = {p}
              )}
            ),
            p
          )
        )),
        0,
        $../divisible(
          m = {p},
          n = {a}
        )
      ),
      _: %UseTheorem(
        $../"Divisibility criterion"(
          a = {p},
          b = {a},
          c = {$../number(value = 1)}
        ),
        $../divisible(
          m = {p},
          n = {$../number(value = 1)}
        )
      ),
      _: %UseTheorem(
        $../"Divisors are less or equal"(
          m = {p},
          n = {$../number(value = 1)}
        ),
        $../"less or equal"(
          m = {p},
          n = {$../number(value = 1)}
        )
      ),
      _: %Consider(p),
      _: %UseDef(result = $../less(
        n = {p},
        m = {$../number(value = 1)}
      ))
    )
  }))}]
}

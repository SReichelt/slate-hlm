%../../../../../logics/hlm%

/**
 * @references * https://coq.inria.fr/library/Coq.Arith.PeanoNat.html#Nat.add_succ_l
 *             * https://coq.inria.fr/library/Coq.NArith.BinNat.html#N.add_succ_l
 *             * https://leanprover-community.github.io/mathlib_docs/core/init/data/nat/basic.html#nat.succ_add
 */
$"Successor can be pulled over addition"(m,n: %Element($"Natural numbers")): %StandardTheorem {
  claim = %equals(
    $sum(
      m = $sum(
        m = m,
        n = $number(value = 1)
      ),
      n = n
    ),
    $sum(
      m = $sum(m = m, n = n),
      n = $number(value = 1)
    )
  ),
  proofs = [{steps = #(_: %ProveByInduction(
    n, $"Natural numbers",
    [
      {
        constructor = $"Natural numbers".zero,
        value = {
          goal = %equals(
            $sum(
              m = m,
              n = $number(value = 1)
            ),
            $sum(
              m = m,
              n = $number(value = 1)
            )
          ),
          steps = #()
        }
      },
      {
        constructor = $"Natural numbers".successor,
        parameters = #(x: %Element($"Natural numbers")),
        value = {
          goal = %equals(
            $"Natural numbers".successor(n = $sum(
              m = $sum(
                m = m,
                n = $number(value = 1)
              ),
              n = x
            )),
            $sum(
              m = $"Natural numbers".successor(n = $sum(m = m, n = x)),
              n = $number(value = 1)
            )
          ),
          steps = #(
            _1: %UseTheorem(
              $"Successor can be pulled over addition"(m = m, n = x),
              result = %equals(
                $sum(
                  m = $sum(
                    m = m,
                    n = $number(value = 1)
                  ),
                  n = x
                ),
                $sum(
                  m = $sum(m = m, n = x),
                  n = $number(value = 1)
                )
              )
            ),
            _: %ProveBySubstitution(
              #(_: %Consider(_1)),
              1,
              %equals(
                $"Natural numbers".successor(n = $sum(
                  m = $sum(m = m, n = x),
                  n = $number(value = 1)
                )),
                $sum(
                  m = $"Natural numbers".successor(n = $sum(m = m, n = x)),
                  n = $number(value = 1)
                )
              ),
              proof = {
                goal = %equals(
                  $"Natural numbers".successor(n = $"Natural numbers".successor(n = $sum(m = m, n = x))),
                  $"Natural numbers".successor(n = $"Natural numbers".successor(n = $sum(m = m, n = x)))
                ),
                steps = #()
              }
            )
          )
        }
      }
    ]
  ))}]
}

%../../../../../logics/hlm%

[
  $~"has property" = $../../Properties/"has property"
]

/**
 * @remarks This is just a slight reformulation based on the definition of a property (see `$../../Properties/Properties`).
 *
 * @references * https://en.wikipedia.org/wiki/Mathematical_induction
 *             * https://mathworld.wolfram.com/PrincipleofMathematicalInduction.html
 *             * https://proofwiki.org/wiki/Principle_of_Mathematical_Induction/Zero-Based
 */
$"Induction principle of property"(
  p: %Element($../../Properties/Properties(S = $"Natural numbers")),
  _1: %Constraint($~"has property"(
    S = $"Natural numbers", p = p,
    s = $number(value = 0)
  )),
  _2: %Constraint(%forall(
    #(
      m: %Element($"Natural numbers"),
      _3: %Constraint($~"has property"(S = $"Natural numbers", p = p, s = m))
    ),
    $~"has property"(
      S = $"Natural numbers", p = p,
      s = $sum(
        m = m,
        n = $number(value = 1)
      )
    )
  ))
): %StandardTheorem {
  claim = %forall(
    #(n: %Element($"Natural numbers")),
    $~"has property"(S = $"Natural numbers", p = p, s = n)
  )
}

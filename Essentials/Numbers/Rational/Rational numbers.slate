%../../../../../logics/hlm%

/**
 * @remarks This definition is rather similar to `$../Integer/Integers`. The constructor notation is later justified by `$"Actual quotient equals formal quotient"`.
 *
 *          Note that in the constructor, we force the denominator to be positive. This is not required at this point, since the given equality definition would also work for negative numbers. However, if the denominator was allowed to be negative, the definition of `$"less or equal"` would probably need to be split into several cases.
 *
 * @references * https://en.wikipedia.org/wiki/Rational_number
 *             * https://mathworld.wolfram.com/RationalNumber.html
 *             * https://proofwiki.org/wiki/Definition:Rational_Number
 *             * https://ncatlab.org/nlab/show/rational+number
 *             * https://coq.inria.fr/library/Coq.QArith.QArith_base.html#Q (together with https://coq.inria.fr/library/Coq.QArith.QArith_base.html#Qeq)
 *             * https://leanprover-community.github.io/mathlib_docs/data/rat/basic.html#rat (but uses coprimality requirement instead of equivalence relation)
 */
$"Rational numbers": %Construction {
  $quotient(
    n: %Element($../Integer/Integers),
    d: %Element($../Natural/Subsets/"Positive numbers")
  ): %Constructor {
    notation = [$Parens(
      body = $Operator(
        symbol = $ConstructorName(name = '/'),
        operands = [n, d],
        space = '',
        minParenLevel = 2,
        maxParenLevel = 2
      ),
      style = '()'
    )],
    equalityDefinition = {
      leftParameters = #(
        n: %Element($../Integer/Integers),
        d: %Element($../Natural/Subsets/"Positive numbers")
      ),
      rightParameters = #(
        "n'": %Element($../Integer/Integers),
        "d'": %Element($../Natural/Subsets/"Positive numbers")
      ),
      definition = [%equals(
        $../Integer/product(
          a = {n},
          b = {"d'"}
        ),
        $../Integer/product(
          a = {"n'"},
          b = {d}
        )
      )]
    },
    rewrite = {
      value = $quotient(
        b = {n},
        a = {d}
      ),
      theorem = $"Actual quotient equals formal quotient"
    }
  }

  notation = ['â„š'],
  embedding = {
    parameter = #(x: %Element($../Integer/Integers)),
    target = $"Rational numbers".quotient(
      n = {x},
      d = {$../Natural/number(value = 1)}
    )
  }
}

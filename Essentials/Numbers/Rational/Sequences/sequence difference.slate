%../../../../../../logics/hlm%

$"sequence difference"(
  𝐚: %Element($../../../Sequences/"Infinite sequences"(S = {$../"Rational numbers"})),
  𝐛: %Element(%previous)
): %ExplicitOperator {
  notation = $SubtractionOperator(operands = [𝐚, 𝐛]),
  definition = [
    %structuralCases(
      𝐛,
      $../../../Sequences/"Infinite sequences"(S = {$../"Rational numbers"}),
      [{
        constructor = $../../../Sequences/"Infinite sequences".sequence,
        parameters = #(_n: %Binder(
          #(n: %Element($../../Natural/"Natural numbers")),
          #(b: %Element($../"Rational numbers"))
        )),
        value = %structuralCases(
          𝐚,
          $../../../Sequences/"Infinite sequences"(S = {$../"Rational numbers"}),
          [{
            constructor = $../../../Sequences/"Infinite sequences".sequence,
            parameters = #(_n: %Binder(
              #(n: %Element($../../Natural/"Natural numbers")),
              #(a: %Element($../"Rational numbers"))
            )),
            value = $../../../Sequences/"Infinite sequences"(S = {$../"Rational numbers"}).sequence(_n = {
                #(n: %Element($../../Natural/"Natural numbers")),
                {a = {$../difference(
                  a = {a[n = {n}]},
                  b = {b[n = {n}]}
                )}}
            })
          }]
        )
      }]
    ),
    $"sequence sum"(
      𝐚 = {𝐚},
      𝐛 = {$"sequence inverse"(𝐚 = {𝐛})}
    )
  ]
}

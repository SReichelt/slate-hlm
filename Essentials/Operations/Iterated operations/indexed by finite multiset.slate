%../../../../../logics/hlm%

[
  $~"Cartesian product" = $../../Sets/"Cartesian product",
  $~Elements = $../../Sets/Multisets/Elements,
  $~"Natural numbers" = $../../Numbers/Natural/"Natural numbers",
  $~"Segment (less)" = $../../Numbers/Natural/Subsets/"Segment (less)",
  $~Set = $../../Sets/Multisets/Set,
  $~Sets = $../../Sets,
  $~multiplicity = $../../Sets/Multisets/multiplicity
]

$"indexed by finite multiset"(
  X: %Set(auto = %true),
  ⨂: %Element($"Iterated operations"(X = X)),
  S: %Set(auto = %true),
  𝑰: %Element($~Sets/Multisets/Multisets(S = S)),
  _1: %Constraint($~Sets/Multisets/finite(S = S, 𝑻 = 𝑰)),
  _2: %Binder(
    #(i: %Element($~Set(S = S, 𝑻 = 𝑰))),
    #(a: %Element(X))
  )
): %ExplicitOperator {
  notation = $LargeOperator(
    symbol = ⨂,
    operand = a,
    under = $ElementRelation(operands = [i, 𝑰]),
    maxParenLevel = 1
  ),
  definition = [
    $"indexed by finite set"(
      X = X, ⨂ = ⨂,
      I = $~Elements(S = S, 𝑻 = 𝑰),
      _2 = {
        #(j: %Element($~Elements(S = S, 𝑻 = 𝑰))),
        {a = %structuralCases(
          j,
          $~"Cartesian product"(S = S, T = $~"Natural numbers"),
          [{
            constructor = $~"Cartesian product".pair,
            parameters = #(
              t: %Element(S),
              n: %Element($~"Natural numbers")
            ),
            value = a[i = t]
          }]
        )}
      }
    ),
    $"indexed by finite set"(
      X = X, ⨂ = ⨂,
      I = $~Set(S = S, 𝑻 = 𝑰),
      _2 = {
        #(j: %Element($~Set(S = S, 𝑻 = 𝑰))),
        {a = $"indexed by natural number"(
          X = X, ⨂ = ⨂,
          n = $~multiplicity(S = S, 𝑻 = 𝑰, t = j),
          _1 = {
            #(k: %Element($~"Segment (less)"(n = $~multiplicity(S = S, 𝑻 = 𝑰, t = j)))),
            {a = a[i = j]}
          }
        )}
      }
    ),
    $"indexed by set with finite support"(
      X = X, ⨂ = ⨂, I = S,
      _1 = {
        #(j: %Element(S)),
        {a = $"indexed by natural number"(
          X = X, ⨂ = ⨂,
          n = $~multiplicity(S = S, 𝑻 = 𝑰, t = j),
          _1 = {
            #(k: %Element($~"Segment (less)"(n = $~multiplicity(S = S, 𝑻 = 𝑰, t = j)))),
            {a = a[i = j]}
          }
        )}
      }
    )
  ]
}

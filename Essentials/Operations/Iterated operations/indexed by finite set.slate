%../../../../../logics/hlm%

[
  $~Bijections = $../../Functions/Bijections,
  $~"Natural numbers" = $../../Numbers/Natural/"Natural numbers",
  $~"Segment (less)" = $../../Numbers/Natural/Subsets/"Segment (less)",
  $~value = $../../Functions/value
]

$"indexed by finite set"(
  X: %Set(auto = %true),
  ⨂: %Element($"Iterated operations"(X = X)),
  I: %Set,
  _1: %Constraint($../../Sets/finite(S = I)),
  _2: %Binder(
    #(i: %Element(I)),
    #(a: %Element(X))
  )
): %ImplicitOperator {
  notation = $LargeOperator(
    symbol = ⨂,
    operand = a,
    under = $ElementRelation(operands = [i, I]),
    maxParenLevel = 1
  ),
  parameter = #(x: %Element(X)),
  definition = [
    %forall(
      #(
        n: %Element($~"Natural numbers"),
        f: %Element($~Bijections(
          X = $~"Segment (less)"(n = n),
          Y = I
        ))
      ),
      %equals(
        $"indexed by natural number"(
          X = X, ⨂ = ⨂, n = n,
          _1 = {
            #(j: %Element($~"Segment (less)"(n = n))),
            {a = a[i = $~value(
              X = $~"Segment (less)"(n = n),
              Y = I, f = f, x = j
            )]}
          }
        ),
        x
      )
    ),
    %exists(
      #(
        n: %Element($~"Natural numbers"),
        f: %Element($~Bijections(
          X = $~"Segment (less)"(n = n),
          Y = I
        ))
      ),
      formula = %equals(
        $"indexed by natural number"(
          X = X, ⨂ = ⨂, n = n,
          _1 = {
            #(j: %Element($~"Segment (less)"(n = n))),
            {a = a[i = $~value(
              X = $~"Segment (less)"(n = n),
              Y = I, f = f, x = j
            )]}
          }
        ),
        x
      )
    )
  ]
}

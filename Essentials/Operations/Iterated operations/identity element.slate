%../../../../../logics/hlm%

$"identity element"(
  X: %Set(auto = %true),
  ⨂: %Element($"Iterated operations"(X = {X}))
): %ExplicitOperator {
  notation = $SubSup(
    body = 'e',
    sub = ⨂
  ),
  definition = [%structuralCases(
    ⨂,
    $"Iterated operations"(X = {X}),
    [{
      constructor = $"Iterated operations".operation,
      parameters = #(
        ∗: %Element($../"Inner operations"(X = {X})),
        e: %Element(X),
        _1: %Constraint($../../../Algebra/Monoids/"commutative monoid"(
          M = {X},
          ∗ = {∗},
          e = {e}
        ))
      ),
      value = e
    }]
  )]
}

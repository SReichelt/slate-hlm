%../../../../../logics/hlm%

$operation(
  X: %Set(auto = %true),
  ⨂: %Element(
    $"Iterated operations"(X = X),
    auto = %true
  ),
  x,y: %Element(X)
): %ExplicitOperator {
  notation = $Operator(
    symbol = ⨂,
    operands = [x, y]
  ),
  definition = [%structuralCases(
    ⨂,
    $"Iterated operations"(X = X),
    [{
      constructor = $"Iterated operations".operation,
      parameters = #(
        ∗: %Element($../"Inner operations"(X = X)),
        e: %Element(X),
        _1: %Constraint($../../../Algebra/Monoids/"commutative monoid"(
          M = X,
          ∗ = ∗,
          e = e
        ))
      ),
      value = $../value(
        X = X,
        Y = X,
        Z = X,
        ∗ = ∗,
        x = x,
        y = y
      )
    }]
  )]
}

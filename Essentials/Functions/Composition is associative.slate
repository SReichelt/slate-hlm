%../../../../logics/hlm%

/**
 * @references * https://en.wikipedia.org/wiki/Function_composition#Properties
 *             * https://mathworld.wolfram.com/Composition.html
 *             * https://proofwiki.org/wiki/Composition_of_Mappings_is_Associative
 *             * https://coq.inria.fr/library/Coq.Program.Combinators.html#compose_assoc
 *             * https://leanprover-community.github.io/mathlib_docs/init/function.html#function.comp.assoc
 */
$"Composition is associative"(
  W,X,Y,Z: %Set(auto = %true),
  f: %Element($Functions(X = W, Y = X)),
  g: %Element($Functions(X = X, Y = Y)),
  h: %Element($Functions(X = Y, Y = Z))
): %StandardTheorem {
  claim = %equals(
    $composition(
      X = W, Y = X, Z = Z, f = f,
      g = $composition(X = X, Y = Y, Z = Z, f = g, g = h)
    ),
    $composition(
      X = W, Y = Y, Z = Z,
      f = $composition(X = W, Y = X, Z = Y, f = f, g = g),
      g = h
    )
  ),
  proofs = [{steps = #(_: %ProveDef(proof = {
    goal = %forall(
      #(w: %Element(W)),
      %equals(
        $value(
          X = X, Y = Z,
          f = $composition(X = X, Y = Y, Z = Z, f = g, g = h),
          x = $value(X = W, Y = X, f = f, x = w)
        ),
        $value(
          X = Y, Y = Z, f = h,
          x = $value(
            X = W, Y = Y,
            f = $composition(X = W, Y = X, Z = Y, f = f, g = g),
            x = w
          )
        )
      )
    ),
    steps = #(_: %ProveForAll({
      parameters = #(w: %Element(W)),
      goal = %equals(
        $value(
          X = Y, Y = Z, f = h,
          x = $value(
            X = X, Y = Y, f = g,
            x = $value(X = W, Y = X, f = f, x = w)
          )
        ),
        $value(
          X = Y, Y = Z, f = h,
          x = $value(
            X = X, Y = Y, f = g,
            x = $value(X = W, Y = X, f = f, x = w)
          )
        )
      ),
      steps = #()
    }))
  }))}]
}

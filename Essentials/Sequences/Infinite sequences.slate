%../../../../logics/hlm%

/**
 * @remarks We omit the word ‚Äúinfinite‚Äù because infinite sequences are used much more frequently than finite ones.
 *
 *          We could define infinite sequences simply as functions, but a custom construction has several advantages, including the ability to easily deconstruct a sequence into its elements and the ability to omit _S_ from the constructor.
 *
 *          Sequences of particular sets are treated in appropriate subsections concerning those sets.
 *
 * @references * https://en.wikipedia.org/wiki/Sequence
 *             * http://mathworld.wolfram.com/Sequence.html
 *             * https://proofwiki.org/wiki/Definition:Sequence/Infinite_Sequence
 *             * https://ncatlab.org/nlab/show/sequence
 */
$"Infinite sequences"(S: %Set(auto = %true)): %Construction {
  $sequence(n: %Binding(
    $../Numbers/Natural/"Natural numbers",
    #(a: %Element(S))
  )): %Constructor {
    display = [$SubSup(
      body = $Parens(
        body = a,
        style = '()'
      ),
      sub = $ElementRelation(
        element = n,
        set = '‚Ñï'
      )
    )],
    equalityDefinition = {
      leftParameters = #(n: %Binding(
        $../Numbers/Natural/"Natural numbers",
        #(a: %Element(S))
      )),
      rightParameters = #(n: %Binding(
        $../Numbers/Natural/"Natural numbers",
        #(b: %Element(S))
      )),
      definition = [%forall(
        #(n: %Element($../Numbers/Natural/"Natural numbers")),
        %equals(a[n], b[n])
      )],
      isomorphic = %true
    }
  }

  display = [$SubSup(
    body = S,
    sup = 'œâ'
  )],
  definitionDisplay = {
    parameter = #(ùêö: %Expr),
    singularName = ['sequence', ' on ', S],
    pluralName = ['sequences', ' on ', S]
  },
  embedding = {
    parameter = #(_ùêö: %Element($"Fixed-length sequences"(
      S = {S},
      Œ± = {$../Numbers/Ordinal/Examples/omega}
    ))),
    target = %structuralCases(
      _ùêö,
      $"Fixed-length sequences"(
        S = {S},
        Œ± = {$../Numbers/Ordinal/Examples/omega}
      ),
      [{
        constructor = $"Fixed-length sequences".sequence,
        parameters = #(j: %Binding(
          $../Numbers/Ordinal/Subsets/"Segment (less)"(Œ± = {$../Numbers/Ordinal/Examples/omega}),
          #(a: %Element(S))
        )),
        value = $"Infinite sequences"(S = {S}).sequence(n = {
          #(k: %Element($../Numbers/Natural/"Natural numbers")),
          {a = {a[k]}}
        })
      }]
    )
  }
}

%../../../../logics/hlm%

/**
 * @remarks This definition captures propositions up to equivalence. Since HLM uses classical logic, it can be proved to contain only two values, true and false. It can therefore be used interchangeably with the set `$../Numbers/Natural/Subsets/"Binary digits"` of binary digits.
 *
 * @references * https://en.wikipedia.org/wiki/Boolean_data_type
 *             * https://proofwiki.org/wiki/Definition:Truth_Value
 *             * https://ncatlab.org/nlab/show/truth+value
 *             * https://coq.inria.fr/library/Coq.Bool.Bool.html
 *             * https://leanprover-community.github.io/mathlib_docs/core/init/core.html#bool
 */
$"Boolean values": %Construction {
  $value(p: %Prop): %Constructor {
    notation = $Parens(body = p, style = '[]'),
    equalityDefinition = {
      leftParameters = #(p: %Prop),
      rightParameters = #(q: %Prop),
      definition = [%equiv(p, q)],
      isomorphic = %true
    }
  }

  notation = 'ùìëùì∏ùì∏ùìµ',
  rewrite = {
    parameter = #(b: %Element($"Boolean values")),
    value = $"Boolean values".value(p = $true(b = b))
  }
}

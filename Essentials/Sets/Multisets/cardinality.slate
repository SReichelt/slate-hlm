%../../../../../logics/hlm%

[
  $~"Cardinal numbers" = $../../Numbers/Cardinal/"Cardinal numbers",
  $~"Iterated operations" = $../../Operations/"Iterated operations",
  $~"Natural numbers" = $../../Numbers/Natural/"Natural numbers",
  $~"iterated sum" = $../../Numbers/Natural/"Iterated operators"/"iterated sum"
]

$cardinality(
  S: %Set(auto = %true),
  𝑻: %Element($Multisets(S = S))
): %ExplicitOperator {
  notation = $Parens(body = 𝑻, style = '||'),
  definition = [
    $~"Cardinal numbers".cardinality(S = $Elements(S = S, 𝑻 = 𝑻)),
    %cases([
      {
        formula = $finite(S = S, 𝑻 = 𝑻),
        value = $~"Iterated operations"/"indexed by finite set"(
          X = $~"Natural numbers", ⨂ = $~"iterated sum",
          I = $Set(S = S, 𝑻 = 𝑻),
          _2 = {
            #(i: %Element($Set(S = S, 𝑻 = 𝑻))),
            {a = $multiplicity(S = S, 𝑻 = 𝑻, t = i)}
          }
        )
      },
      {
        formula = %not($finite(S = S, 𝑻 = 𝑻)),
        value = $~"Cardinal numbers".cardinality(S = $Set(S = S, 𝑻 = 𝑻))
      }
    ]),
    %cases([
      {
        formula = $finite(S = S, 𝑻 = 𝑻),
        value = $~"Iterated operations"/"indexed by set with finite support"(
          X = $~"Natural numbers", ⨂ = $~"iterated sum", I = S,
          _1 = {
            #(i: %Element(S)),
            {a = $multiplicity(S = S, 𝑻 = 𝑻, t = i)}
          }
        )
      },
      {
        formula = %not($finite(S = S, 𝑻 = 𝑻)),
        value = $~"Cardinal numbers".cardinality(S = $Set(S = S, 𝑻 = 𝑻))
      }
    ])
  ]
}

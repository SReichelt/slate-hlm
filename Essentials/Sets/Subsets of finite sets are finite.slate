%../../../../logics/hlm%

[
  $~Cardinal = $../Numbers/Cardinal,
  $~"Cardinal numbers" = $../Numbers/Cardinal/"Cardinal numbers",
  $~Functions = $../Functions/Functions,
  $~"Natural numbers" = $../Numbers/Natural/"Natural numbers",
  $~"Segment (less)" = $../Numbers/Natural/Subsets/"Segment (less)",
  $~finite = $../Numbers/Cardinal/finite,
  $~injective = $../Functions/injective,
  $~restriction = $../Functions/restriction
]

/**
 * @references * https://leanprover-community.github.io/mathlib_docs/data/set/finite.html#set.finite.subset
 */
$"Subsets of finite sets are finite"(
  S: %Set,
  _1: %Constraint($finite(S = S)),
  T: %Subset(S)
): %StandardTheorem {
  claim = $finite(S = T),
  proofs = [
    {steps = #(_: %ProveDef(proof = {
      goal = %exists(
        #(
          m: %Element($~"Natural numbers"),
          f: %Element($~Functions(
            X = T,
            Y = $~"Segment (less)"(n = m)
          ))
        ),
        formula = $~injective(
          X = T,
          Y = $~"Segment (less)"(n = m),
          f = f
        )
      ),
      steps = #(
        _: %Consider(_1),
        _: %UseDef(result = %exists(
          #(
            n: %Element($~"Natural numbers"),
            g: %Element($~Functions(
              X = S,
              Y = $~"Segment (less)"(n = n)
            ))
          ),
          formula = $~injective(
            X = S,
            Y = $~"Segment (less)"(n = n),
            f = g
          )
        )),
        _: %UseExists(#(
          n: %Element($~"Natural numbers"),
          g: %Element($~Functions(
            X = S,
            Y = $~"Segment (less)"(n = n)
          ))
        )),
        _: %ProveExists(
          {
            m = n,
            f = $~restriction(
              X = S,
              Y = $~"Segment (less)"(n = n),
              f = g, A = T
            )
          },
          proof = {
            goal = $~injective(
              X = T,
              Y = $~"Segment (less)"(n = n),
              f = $~restriction(
                X = S,
                Y = $~"Segment (less)"(n = n),
                f = g, A = T
              )
            ),
            steps = #(_: %UseTheorem($../Functions/"Restriction preserves injectivity"(
              X = S,
              Y = $~"Segment (less)"(n = n),
              f = g, A = T
            )))
          }
        )
      )
    }))},
    {steps = #(_: %ProveDef(proof = {
      goal = $~finite(κ = $~"Cardinal numbers".cardinality(S = T)),
      steps = #(
        _2: %UseTheorem(
          $~Cardinal/"Cardinality of subset is less or equal"(S = S, T = T),
          result = $~Cardinal/"less or equal"(
            κ = $~"Cardinal numbers".cardinality(S = T),
            μ = $~"Cardinal numbers".cardinality(S = S)
          )
        ),
        _: %Consider(_1),
        _3: %UseDef(result = $~finite(κ = $~"Cardinal numbers".cardinality(S = S))),
        _: %UseTheorem($~Cardinal/"Less or equal preserves finiteness"(
          κ = $~"Cardinal numbers".cardinality(S = T),
          μ = $~"Cardinal numbers".cardinality(S = S),
          _1 = {proof = {steps = #(_: %Consider(_3))}},
          _2 = {proof = {steps = #(_: %Consider(_2))}}
        ))
      )
    }))}
  ]
}
